{"version":3,"sources":["app/components/Footer/Footer.jsx","app/contexts/NotificationContext.js","app/hooks/useNotification.js","app/components/NotificationBar/NotificationBar.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Brand/Brand.jsx","app/navigations.js","app/components/Sidenav/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["AppFooter","styled","Toolbar","display","alignItems","minHeight","topBarHeight","width","padding","flexDirection","margin","FooterContent","maxWidth","Footer","theme","useTheme","settings","useSettings","footerTheme","themes","footer","ThemeProvider","AppBar","color","position","sx","zIndex","m","Date","getFullYear","href","NotificationContext","createContext","notifications","deleteNotification","clearNotifications","getNotifications","createNotification","useNotification","useContext","Notification","marginBottom","height","boxShadow","themeShadows","marginLeft","marginTop","fontWeight","NotificationCard","Box","opacity","palette","text","secondary","fontSize","DeleteButton","IconButton","right","marginRight","background","CardLeftContent","justifyContent","Heading","NotificationBar","container","React","useState","panelOpen","setPanelOpen","handleDrawerToggle","textColor","primary","onClick","Badge","badgeContent","length","Icon","activeTheme","Drawer","variant","anchor","open","onClose","ModalProps","keepMounted","sideNavWidth","map","notification","size","className","id","to","path","style","textDecoration","Card","mx","mb","elevation","icon","name","heading","getTimeDifference","timestamp","px","pt","pb","title","subtitle","Button","StyledIconButton","TopbarRoot","top","transition","TopbarContainer","paddingLeft","paddingRight","main","breakpoints","down","UserMenu","cursor","borderRadius","StyledItem","MenuItem","minWidth","Layout1Topbar","updateSettings","useAuth","logout","user","isMdScreen","useMediaQuery","mode","sidebarSettings","layout1Settings","leftSidebar","menuButton","Hidden","xsDown","Avatar","src","avatar","memo","BrandRoot","StyledSpan","Span","Brand","children","navigations","label","type","iconText","StyledScrollBar","Scrollbar","SideNavMobile","left","bottom","up","Sidenav","options","suppressScrollX","items","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","SidebarNavRoot","primaryBg","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","overflow","backgroundImage","NavListBox","Layout1Sidenav","primaryRGB","convertHexToRGB","sidenavCompactWidth","smDown","Switch","onChange","checked","SidenavTheme","sidenavTheme","Toggle","SecondarySidebarToggle","toggle","secondarySidebar","contrastText","clsx","Fab","BadgeSelected","Label","backgroundColor","dark","transform","letterSpacing","MaxCustomaizer","paddingBottom","default","LayoutBox","Controller","IMG","demoLayouts","thumbnail","isPro","bgOpacity","topbar","fixed","MatxCustomizer","setOpen","tabIndex","setTabIndex","tooglePanel","Tooltip","placement","ml","mr","layout","invisible","alt","SidebarRoot","shadows","props","SecondarySidebarContent","SecondarySidenavTheme","classes","SecondarySidebar","secondarySidebarTheme","Layout1Root","ContentBox","overflowY","overflowX","flexGrow","LayoutContainer","verticalAlign","Layout1","topbarTheme","sidenavMode","showSidenav","show","sidenavWidth","getSidenavWidth","ref","useRef","layoutClasses","useEffect","current","sidebarMode","perfectScrollbar"],"mappings":"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","file":"static/js/8.f1ab6ca3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Span, Paragraph } from '../Typography'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Toolbar, AppBar, ThemeProvider } from '@mui/material'\r\nimport { styled, useTheme } from '@mui/system'\r\nimport { topBarHeight } from 'app/utils/constant'\r\n\r\nconst AppFooter = styled(Toolbar)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minHeight: topBarHeight,\r\n    '@media (max-width: 499px)': {\r\n        display: 'table',\r\n        width: '100%',\r\n        minHeight: 'auto',\r\n        padding: '1rem 0',\r\n        '& .container': {\r\n            flexDirection: 'column !important',\r\n            '& a': {\r\n                margin: '0 0 16px !important',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst FooterContent = styled('div')(() => ({\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0px 1rem',\r\n    maxWidth: '1170px',\r\n    margin: '0 auto',\r\n}))\r\n\r\nconst Footer = () => {\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n\r\n    const footerTheme = settings.themes[settings.footer.theme] || theme\r\n\r\n    return (\r\n        <ThemeProvider theme={footerTheme}>\r\n            <AppBar\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                sx={{ zIndex: 96 }}\r\n            >\r\n                <AppFooter>\r\n                    <FooterContent>\r\n                        <Span sx={{ m: \"auto\" }}></Span>\r\n                        <Paragraph sx={{ m: 0 }}>\r\n                            ©{new Date().getFullYear()}\r\n                            &nbsp; Design and Developed by ❤️{' '}\r\n                            <a href=\"http://ui-lib.com\">Psyber Infc</a>\r\n                        </Paragraph>\r\n                    </FooterContent>\r\n                </AppFooter>\r\n            </AppBar>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_NOTIFICATIONS': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        case 'DELETE_NOTIFICATION': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        case 'CLEAR_NOTIFICATIONS': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst NotificationContext = createContext({\r\n    notifications: [],\r\n    deleteNotification: () => {},\r\n    clearNotifications: () => {},\r\n    getNotifications: () => {},\r\n    createNotification: () => {},\r\n})\r\n\r\nexport const NotificationProvider = ({ settings, children }) => {\r\n    const [state, dispatch] = useReducer(reducer, [])\r\n\r\n    const deleteNotification = async (notificationID) => {\r\n        try {\r\n            const res = await axios.post('/api/notification/delete', {\r\n                id: notificationID,\r\n            })\r\n            dispatch({\r\n                type: 'DELETE_NOTIFICATION',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const clearNotifications = async () => {\r\n        try {\r\n            const res = await axios.post('/api/notification/delete-all')\r\n            dispatch({\r\n                type: 'CLEAR_NOTIFICATIONS',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const getNotifications = async () => {\r\n        try {\r\n            const res = await axios.get('/api/notification')\r\n            dispatch({\r\n                type: 'LOAD_NOTIFICATIONS',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n    const createNotification = async (notification) => {\r\n        try {\r\n            const res = await axios.post('/api/notification/add', {\r\n                notification,\r\n            })\r\n            dispatch({\r\n                type: 'CREATE_NOTIFICATION',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotifications()\r\n    }, [])\r\n\r\n    return (\r\n        <NotificationContext.Provider\r\n            value={{\r\n                notifications: state.notifications,\r\n                deleteNotification,\r\n                clearNotifications,\r\n                getNotifications,\r\n                createNotification,\r\n            }}\r\n        >\r\n            {children}\r\n        </NotificationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NotificationContext\r\n","import { useContext } from 'react'\r\nimport NotificationContext from 'app/contexts/NotificationContext'\r\n\r\nconst useNotification = () => useContext(NotificationContext)\r\n\r\nexport default useNotification\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Small, Paragraph } from '../Typography'\r\nimport { themeShadows } from '../MatxTheme/themeColors'\r\nimport { getTimeDifference } from 'utils.js'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useNotification from 'app/hooks/useNotification'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport {\r\n    Icon,\r\n    Badge,\r\n    Card,\r\n    Button,\r\n    IconButton,\r\n    Drawer,\r\n    ThemeProvider,\r\n} from '@mui/material'\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\r\n\r\nconst Notification = styled('div')(() => ({\r\n    padding: '16px',\r\n    marginBottom: '16px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: topBarHeight,\r\n    boxShadow: themeShadows[6],\r\n    '& h5': {\r\n        marginLeft: '8px',\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        fontWeight: '500',\r\n    },\r\n}))\r\n\r\nconst NotificationCard = styled(Box)(({ theme }) => ({\r\n    position: 'relative',\r\n    '&:hover': {\r\n        '& .messageTime': {\r\n            display: 'none',\r\n        },\r\n        '& .deleteButton': {\r\n            opacity: '1',\r\n        },\r\n    },\r\n    '& .messageTime': {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    '& .icon': { fontSize: '1.25rem' }\r\n}))\r\n\r\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\r\n    opacity: '0',\r\n    position: 'absolute',\r\n    right: 5,\r\n    marginTop: 9,\r\n    marginRight: '24px',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst CardLeftContent = styled('div')(({ theme }) => ({\r\n    padding: '12px 8px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n    '& small': {\r\n        fontWeight: '500',\r\n        marginLeft: '16px',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst Heading = styled('span')(({ theme }) => ({\r\n    fontWeight: '500',\r\n    marginLeft: '16px',\r\n    color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst NotificationBar = ({ container }) => {\r\n    const { settings } = useSettings()\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n    const [panelOpen, setPanelOpen] = React.useState(false)\r\n    const { deleteNotification, clearNotifications, notifications } =\r\n        useNotification()\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textColor = palette.text.primary\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\r\n                    <Icon sx={{ color: textColor }}>notifications</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    width={'100px'}\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <Box sx={{ width: sideNavWidth }}>\r\n                        <Notification>\r\n                            <Icon color=\"primary\">notifications</Icon>\r\n                            <h5>Notifications</h5>\r\n                        </Notification>\r\n\r\n                        {notifications?.map((notification) => (\r\n                            <NotificationCard key={notification.id}>\r\n                                <DeleteButton\r\n                                    size=\"small\"\r\n                                    className=\"deleteButton\"\r\n                                    onClick={() =>\r\n                                        deleteNotification(notification.id)\r\n                                    }\r\n                                >\r\n                                    <Icon className=\"icon\">\r\n                                        clear\r\n                                    </Icon>\r\n                                </DeleteButton>\r\n                                <Link\r\n                                    to={`/${notification.path}`}\r\n                                    onClick={handleDrawerToggle}\r\n                                    style={{ textDecoration: 'none' }}\r\n                                >\r\n                                    <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\r\n                                        <CardLeftContent>\r\n                                            <Box display=\"flex\">\r\n                                                <Icon\r\n                                                    className=\"icon\"\r\n                                                    color={notification.icon.color}\r\n                                                >\r\n                                                    {notification.icon.name}\r\n                                                </Icon>\r\n                                                <Heading>\r\n                                                    {notification.heading}\r\n                                                </Heading>\r\n                                            </Box>\r\n                                            <Small className=\"messageTime\">\r\n                                                {getTimeDifference(\r\n                                                    new Date(\r\n                                                        notification.timestamp\r\n                                                    )\r\n                                                )}ago\r\n                                            </Small>\r\n                                        </CardLeftContent>\r\n                                        <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                                            <Paragraph sx={{ m: 0 }}>\r\n                                                {notification.title}\r\n                                            </Paragraph>\r\n                                            <Small sx={{ color: secondary }}>\r\n                                                {notification.subtitle}\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </Card>\r\n                                </Link>\r\n                            </NotificationCard>\r\n                        ))}\r\n                        {!!notifications?.length && (\r\n                            <Box sx={{ color: secondary }}>\r\n                                <Button onClick={clearNotifications}>\r\n                                    Clear Notifications\r\n                                </Button>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotificationBar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { styled, useTheme, Box } from '@mui/system'\r\nimport { Span } from '../../../components/Typography'\r\nimport { MatxMenu, MatxSearchBox } from 'app/components'\r\n\r\nimport NotificationBar from '../../NotificationBar/NotificationBar'\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\r\nimport {\r\n    Icon,\r\n    IconButton,\r\n    MenuItem,\r\n    Avatar,\r\n    useMediaQuery,\r\n    Hidden,\r\n} from '@mui/material'\r\nimport { topBarHeight } from 'app/utils/constant'\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n    color: theme.palette.text.primary,\r\n}))\r\n\r\nconst TopbarRoot = styled('div')(({ theme }) => ({\r\n    top: 0,\r\n    zIndex: 96,\r\n    transition: 'all 0.3s ease',\r\n    boxShadow: themeShadows[8],\r\n    height: topBarHeight,\r\n}))\r\n\r\nconst TopbarContainer = styled(Box)(({ theme }) => ({\r\n    padding: '8px',\r\n    paddingLeft: 18,\r\n    paddingRight: 20,\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    background: theme.palette.primary.main,\r\n    [theme.breakpoints.down('sm')]: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n        paddingLeft: 14,\r\n        paddingRight: 16,\r\n    },\r\n}))\r\n\r\nconst UserMenu = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    borderRadius: 24,\r\n    padding: 4,\r\n    '& span': {\r\n        margin: '0 8px',\r\n    },\r\n}))\r\n\r\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: 185,\r\n    '& a': {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        textDecoration: 'none',\r\n    },\r\n    '& span': {\r\n        marginRight: '10px',\r\n        color: theme.palette.text.primary,\r\n    },\r\n}))\r\n\r\nconst Layout1Topbar = () => {\r\n    const theme = useTheme()\r\n    const { settings, updateSettings } = useSettings()\r\n    const { logout, user } = useAuth()\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidebarToggle = () => {\r\n        let { layout1Settings } = settings\r\n        let mode\r\n        if (isMdScreen) {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'close'\r\n                    ? 'mobile'\r\n                    : 'close'\r\n        } else {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\r\n        }\r\n        updateSidebarMode({ mode })\r\n    }\r\n\r\n    return (\r\n        <TopbarRoot>\r\n            <TopbarContainer>\r\n                <Box display=\"flex\">\r\n                    <StyledIconButton onClick={handleSidebarToggle}>\r\n                        <Icon>menu</Icon>\r\n                    </StyledIconButton>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <MatxSearchBox />\r\n                    <NotificationBar />\r\n\r\n                    <MatxMenu\r\n                        menuButton={\r\n                            <UserMenu>\r\n                                <Hidden xsDown>\r\n                                    <Span>\r\n                                        Hi <strong>{user.name}</strong>\r\n                                    </Span>\r\n                                </Hidden>\r\n                                <Avatar\r\n                                    src={user.avatar}\r\n                                    sx={{ cursor: 'pointer' }}\r\n                                />\r\n                            </UserMenu>\r\n                        }\r\n                    >\r\n                        <StyledItem>\r\n                            <Link to=\"/\">\r\n                                <Icon> home </Icon>\r\n                                <Span> Home </Span>\r\n                            </Link>\r\n                        </StyledItem>\r\n                        <StyledItem onClick={logout}>\r\n                            <Icon> power_settings_new </Icon>\r\n                            <Span> Logout </Span>\r\n                        </StyledItem>\r\n                    </MatxMenu>\r\n                </Box>\r\n            </TopbarContainer>\r\n        </TopbarRoot>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Topbar)\r\n","import React from 'react'\r\nimport { Span } from '../../components/Typography'\r\nimport { styled, Box } from '@mui/system'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst BrandRoot = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '20px 18px 20px 29px',\r\n}))\r\n\r\nconst StyledSpan = styled(Span)(({ theme, mode }) => ({\r\n    fontSize: 18,\r\n    marginLeft: '.5rem',\r\n    display: mode === 'compact' ? 'none' : 'block',\r\n}))\r\n\r\nconst Brand = ({ children }) => {\r\n    const { settings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode } = leftSidebar\r\n\r\n    return (\r\n        <BrandRoot>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <StyledSpan mode={mode} className=\"sidenavHoverShow\" style={{ fontSize:'35px' }}>\r\n                        TaxRx\r\n                </StyledSpan>\r\n            </Box>\r\n            <Box\r\n                className=\"sidenavHoverShow\"\r\n                sx={{ display: mode === 'compact' ? 'none' : 'block' }}\r\n            >\r\n                {children || null}\r\n            </Box>\r\n        </BrandRoot>\r\n    )\r\n}\r\n\r\nexport default Brand\r\n","export const navigations = [\r\n    {\r\n        name: 'Dashboard',\r\n        path: '/dashboard/default',\r\n        icon: 'dashboard',\r\n    },\r\n    {\r\n        label: 'Components',\r\n        type: 'label',\r\n    },\r\n    {\r\n        name: 'Users',\r\n        path: '/users',\r\n        icon: 'people',\r\n    },\r\n    {\r\n        name: 'Sales',\r\n        icon: 'trending_up',\r\n        children: [\r\n            {\r\n                name: 'Estimates',\r\n                path: '/material/autocomplete',\r\n                iconText: 'A',\r\n            },\r\n            {\r\n                name: 'Invoices',\r\n                path: '/invoices',\r\n                iconText: 'B',\r\n            },\r\n            {\r\n                name: 'Vendors',\r\n                path: '/vendors',\r\n                iconText: 'C',\r\n            },\r\n            {\r\n                name: 'Customers',\r\n                path: '/customers',\r\n                iconText: 'D',\r\n                //icon: 'people',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: 'Expenses',\r\n        path: '/expenses/',\r\n        icon: 'money',\r\n    },\r\n    {\r\n        name: 'Pricing Plan',\r\n        path: '/prices/',\r\n        icon: 'sell',\r\n    },\r\n    {\r\n        label: 'PAGES',\r\n        type: 'label',\r\n    },\r\n    {\r\n        name: 'Session/Auth',\r\n        icon: 'security',\r\n        children: [\r\n            {\r\n                name: 'Sign in',\r\n                iconText: 'SI',\r\n                path: '/session/signin',\r\n            },\r\n            {\r\n                name: 'Sign up',\r\n                iconText: 'SU',\r\n                path: '/session/signup',\r\n            },\r\n            {\r\n                name: 'Forgot Password',\r\n                iconText: 'FP',\r\n                path: '/session/forgot-password',\r\n            },\r\n            {\r\n                name: 'Error',\r\n                iconText: '404',\r\n                path: '/session/404',\r\n            },\r\n        ],\r\n    },\r\n]\r\n","import React, { Fragment } from 'react'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { navigations } from 'app/navigations'\r\nimport { MatxVerticalNav } from 'app/components'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { styled } from '@mui/system'\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n    paddingLeft: '1rem',\r\n    paddingRight: '1rem',\r\n    position: 'relative',\r\n}))\r\n\r\nconst SideNavMobile = styled('div')(({ theme }) => ({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    width: '100vw',\r\n    background: 'rgba(0, 0, 0, 0.54)',\r\n    zIndex: -1,\r\n    [theme.breakpoints.up('lg')]: {\r\n        display: 'none',\r\n    },\r\n}))\r\n\r\nconst Sidenav = ({ children }) => {\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\r\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\r\n\r\n        updateSettings({\r\n            ...settings,\r\n            [activeLayoutSettingsName]: {\r\n                ...activeLayoutSettings,\r\n                leftSidebar: {\r\n                    ...activeLayoutSettings.leftSidebar,\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <StyledScrollBar options={{ suppressScrollX: true }}>\r\n                {children}\r\n                <MatxVerticalNav items={navigations} />\r\n            </StyledScrollBar>\r\n\r\n            <SideNavMobile\r\n                onClick={() => updateSidebarMode({ mode: 'close' })}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidenav\r\n","import React from 'react'\r\nimport Brand from '../../Brand/Brand'\r\nimport { convertHexToRGB } from 'utils'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport Sidenav from '../../Sidenav/Sidenav'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Switch, Hidden } from '@mui/material'\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100vh',\r\n    width: width,\r\n    boxShadow: themeShadows[8],\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'top',\r\n    backgroundSize: 'cover',\r\n    zIndex: 111,\r\n    overflow: 'hidden',\r\n    color: theme.palette.text.primary,\r\n    transition: 'all 250ms ease-in-out',\r\n    backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\r\n    '&:hover': {\r\n        width: sideNavWidth,\r\n        '& .sidenavHoverShow': {\r\n            display: 'block',\r\n        },\r\n        '& .compactNavItem': {\r\n            width: '100%',\r\n            maxWidth: '100%',\r\n            '& .nav-bullet': {\r\n                display: 'block',\r\n            },\r\n            '& .nav-bullet-text': {\r\n                display: 'none',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n}))\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme()\r\n    const { settings, updateSettings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode, bgImgURL } = leftSidebar\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode) {\r\n            case 'compact':\r\n                return sidenavCompactWidth\r\n            default:\r\n                return sideNavWidth\r\n        }\r\n    }\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidenavToggle = () => {\r\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\r\n    }\r\n\r\n    return (\r\n        <SidebarNavRoot\r\n            bgImgURL={bgImgURL}\r\n            primaryBg={primaryRGB}\r\n            width={getSidenavWidth()}\r\n        >\r\n            <NavListBox>\r\n                <Brand>\r\n                    <Hidden smDown>\r\n                        <Switch\r\n                            onChange={handleSidenavToggle}\r\n                            checked={leftSidebar.mode !== 'full'}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                        />\r\n                    </Hidden>\r\n                </Brand>\r\n                <Sidenav />\r\n            </NavListBox>\r\n        </SidebarNavRoot>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Sidenav)\r\n","import React from 'react'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { ThemeProvider, useTheme } from '@mui/material'\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n    const sidenavTheme =\r\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\r\n\r\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\r\n}\r\n\r\nexport default SidenavTheme\r\n","import clsx from 'clsx'\r\nimport React from 'react'\r\nimport { styled, useTheme } from '@mui/system'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Fab, IconButton, Icon } from '@mui/material'\r\n\r\nconst Toggle = styled('div')(() => ({\r\n    position: 'fixed',\r\n    right: '30px',\r\n    bottom: '50px',\r\n    zIndex: 99,\r\n    transition: 'all 0.15s ease',\r\n    '&.open': {\r\n        right: '10px',\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarToggle = () => {\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const toggle = () => {\r\n        updateSettings({\r\n            secondarySidebar: { open: !settings.secondarySidebar.open },\r\n        })\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   updateSettings({\r\n    //     secondarySidebar: { open: !isMobile },\r\n    //   });\r\n    // }, [isMobile]);\r\n\r\n    const { palette } = useTheme()\r\n    const textColor = palette.primary.contrastText\r\n\r\n    return (\r\n        <Toggle className={clsx({ open: settings.secondarySidebar.open })}>\r\n            {settings.secondarySidebar.open && (\r\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n                    <Icon sx={{ color: textColor }}>close</Icon>\r\n                </IconButton>\r\n            )}\r\n            {!settings.secondarySidebar.open && (\r\n                <Fab color=\"primary\" aria-label=\"expand\" onClick={toggle}>\r\n                    <Icon sx={{ color: textColor }}>settings</Icon>\r\n                </Fab>\r\n            )}\r\n        </Toggle>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarToggle\r\n","import { Badge } from '@mui/material'\r\nimport { styled } from '@mui/system'\r\n\r\nconst BadgeSelected = styled(Badge)(() => ({\r\n    top: '0',\r\n    right: '0',\r\n    height: '32px',\r\n    width: '32px',\r\n    borderRadius: '50%',\r\n}))\r\n\r\nexport default BadgeSelected\r\n","import { H5, Span } from '../Typography'\r\nimport BadgeSelected from './BadgeSelected'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport React, { Fragment, useState } from 'react'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport { themeShadows } from '../MatxTheme/themeColors'\r\nimport {\r\n    Icon,\r\n    Card,\r\n    Button,\r\n    Drawer,\r\n    Tooltip,\r\n    IconButton,\r\n    ThemeProvider,\r\n} from '@mui/material'\r\n\r\nconst Label = styled(Span)(({ theme }) => ({\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: theme.palette.primary.dark,\r\n    fontWeight: 700,\r\n    transform: 'rotate(90deg)',\r\n    marginBottom: '2.5rem',\r\n    padding: '.25rem .5rem',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    letterSpacing: '1.5px',\r\n    fontSize: '1rem',\r\n    '&:hover, &.open': {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.secondary.contrastText,\r\n    },\r\n}))\r\n\r\nconst MaxCustomaizer = styled('div')(({ theme }) => ({\r\n    height: '100vh',\r\n    width: 320,\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 50,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingBottom: '32px',\r\n    boxShadow: themeShadows[12],\r\n    background: theme.palette.background.default,\r\n    '& .helpText': {\r\n        margin: '0px .5rem 1rem',\r\n    },\r\n}))\r\n\r\nconst LayoutBox = styled(BadgeSelected)(() => ({\r\n    width: '100%',\r\n    height: '152px !important',\r\n    cursor: 'pointer',\r\n    marginTop: '12px',\r\n    marginBottom: '12px',\r\n    '& .layout-name': {\r\n        display: 'none',\r\n    },\r\n    '&:hover .layout-name': {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        width: '100%',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        zIndex: 12,\r\n    },\r\n}))\r\n\r\nconst Controller = styled('div')(() => ({\r\n    minHeight: 58,\r\n    padding: '14px 20px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '16px',\r\n    boxShadow: themeShadows[6],\r\n}))\r\n\r\nconst IMG = styled('img')(() => ({\r\n    width: '100%',\r\n}))\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n}))\r\n\r\nconst MatxCustomizer = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const [tabIndex, setTabIndex] = useState(0)\r\n    const { settings, updateSettings } = useSettings()\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n\r\n    const tooglePanel = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleTabChange = (index) => {\r\n        setTabIndex(index)\r\n    }\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n                <Label className=\"open\" onClick={tooglePanel}>\r\n                    DEMOS\r\n                </Label>\r\n            </Tooltip>\r\n\r\n            <ThemeProvider theme={activeTheme}>\r\n                <Drawer\r\n                    anchor={'right'}\r\n                    open={open}\r\n                    variant=\"temporary\"\r\n                    onClose={tooglePanel}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <MaxCustomaizer>\r\n                        <Controller>\r\n                            <Box display=\"flex\">\r\n                                <Icon className=\"icon\" color=\"primary\">\r\n                                    settings\r\n                                </Icon>\r\n                                <H5 sx={{ ml: 1, fontSize: '1rem' }}>\r\n                                    Theme Settings\r\n                                </H5>\r\n                            </Box>\r\n                            <IconButton onClick={tooglePanel}>\r\n                                <Icon className=\"icon\">close</Icon>\r\n                            </IconButton>\r\n                        </Controller>\r\n                        <Box px={3} mb={2} display=\"flex\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(0)}\r\n                                sx={{ mr: 2 }}\r\n                            >\r\n                                Demos\r\n                            </Button>\r\n                        </Box>\r\n\r\n                        <StyledScrollBar options={{ suppressScrollX: true }}>\r\n                            {tabIndex === 0 && (\r\n                                <Box sx={{ mb: 4, mx: 3 }}>\r\n                                    <Box sx={{ color: secondary }}>Layouts</Box>\r\n\r\n                                    <Box display=\"flex\" flexDirection=\"column\">\r\n                                        {demoLayouts.map((layout) => (\r\n                                            <LayoutBox\r\n                                                color=\"secondary\"\r\n                                                badgeContent={'Pro'}\r\n                                                invisible={!layout.isPro}\r\n                                                key={layout.name}\r\n                                            >\r\n                                                <Card\r\n                                                    sx={{\r\n                                                        position: 'relative',\r\n                                                    }}\r\n                                                    onClick={() =>\r\n                                                        updateSettings(\r\n                                                            layout.options\r\n                                                        )\r\n                                                    }\r\n                                                    elevation={4}\r\n                                                >\r\n                                                    <Box\r\n                                                        sx={{\r\n                                                            overflow: 'hidden',\r\n                                                        }}\r\n                                                        className=\"layout-name\"\r\n                                                    >\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"secondary\"\r\n                                                        >\r\n                                                            {layout.name}\r\n                                                        </Button>\r\n                                                    </Box>\r\n\r\n                                                    <IMG\r\n                                                        src={layout.thumbnail}\r\n                                                        alt={layout.name}\r\n                                                    />\r\n                                                </Card>\r\n                                            </LayoutBox>\r\n                                        ))}\r\n                                    </Box>\r\n                                </Box>\r\n                            )}\r\n\r\n                            {/* END LAYOUT */}\r\n                            {tabIndex === 1 && (\r\n                                <div>\r\n                                    \r\n                                </div>\r\n                            )}\r\n                        </StyledScrollBar>\r\n                    </MaxCustomaizer>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst demoLayouts = [\r\n    {\r\n        name: 'Light Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'whiteBlue',\r\n                    bgOpacity: 0.98,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Compact Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'compact',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'whiteBlue',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n]\r\n\r\nexport default MatxCustomizer\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\n\r\nimport { Span } from '../Typography'\r\n\r\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\r\n\r\nconst SidebarRoot = styled('div')(({ theme, width }) => ({\r\n    position: 'fixed',\r\n    height: '100vh',\r\n    width: width,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    boxShadow: theme.shadows[8],\r\n    backgroundColor: theme.palette.primary.main,\r\n    zIndex: 98,\r\n    transition: 'all 0.15s ease',\r\n    color: theme.palette.text.primary,\r\n    '@global': {\r\n        '@media screen and (min-width: 767px)': {\r\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\r\n                marginRight: (props) => props.width,\r\n            },\r\n            '.matx-customizer': {\r\n                right: (props) => props.width,\r\n            },\r\n        },\r\n        '@media screen and (max-width: 959px)': {\r\n            '.toolbar-menu-wrap .menu-area': {\r\n                width: (props) => `calc(100% - ${props.width})`,\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarContent = () => {\r\n    // const { palette } = useTheme()\r\n    // const textColor = palette.primary.contrastText\r\n    return (\r\n        <SidebarRoot width={'50px'} className=\"secondary-sidebar\">\r\n            <Span sx={{ m: 'auto' }}></Span>\r\n            <MatxCustomizer />\r\n\r\n            <Span sx={{ m: 'auto' }}></Span>\r\n        </SidebarRoot>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarContent\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@mui/material'\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n}\r\nexport default SecondarySidenavTheme\r\n","import React from 'react'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\r\nimport SecondarySidebarContent from './SecondarySidebarContent'\r\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\r\n\r\nconst SecondarySidebar = () => {\r\n    const { settings } = useSettings()\r\n    const secondarySidebarTheme =\r\n        settings.themes[settings.secondarySidebar.theme]\r\n\r\n    return (\r\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n            {settings.secondarySidebar.open && <SecondarySidebarContent />}\r\n            <SecondarySidebarToggle />\r\n        </SecondarySidenavTheme>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebar\r\n","import Footer from '../../Footer/Footer'\r\nimport Layout1Topbar from './Layout1Topbar'\r\nimport { MatxSuspense } from 'app/components'\r\nimport Layout1Sidenav from './Layout1Sidenav'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { ThemeProvider, useMediaQuery } from '@mui/material'\r\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\r\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\r\nimport { Outlet } from 'react-router-dom'\r\n\r\nconst Layout1Root = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    background: theme.palette.background.default,\r\n}))\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n}))\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n    height: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexGrow: '1',\r\n    flexDirection: 'column',\r\n}))\r\n\r\nconst LayoutContainer = styled(Box)(({ width, secondarySidebar }) => ({\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexGrow: '1',\r\n    flexDirection: 'column',\r\n    verticalAlign: 'top',\r\n    marginLeft: width,\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    transition: 'all 0.3s ease',\r\n    marginRight: secondarySidebar.open ? 50 : 0,\r\n}))\r\n\r\nconst Layout1 = () => {\r\n    const { settings, updateSettings } = useSettings()\r\n    const { layout1Settings, secondarySidebar } = settings\r\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\r\n    const {\r\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\r\n    } = layout1Settings\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (sidenavMode) {\r\n            case 'full':\r\n                return sideNavWidth\r\n            case 'compact':\r\n                return sidenavCompactWidth\r\n            default:\r\n                return '0px'\r\n        }\r\n    }\r\n\r\n    const sidenavWidth = getSidenavWidth()\r\n    const theme = useTheme()\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n    const ref = useRef({ isMdScreen, settings })\r\n    const layoutClasses = `theme-${theme.palette.type}`\r\n\r\n    useEffect(() => {\r\n        let { settings } = ref.current\r\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\r\n        if (settings.layout1Settings.leftSidebar.show) {\r\n            let mode = isMdScreen ? 'close' : sidebarMode\r\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isMdScreen])\r\n\r\n    return (\r\n        <Layout1Root className={layoutClasses}>\r\n            {showSidenav && sidenavMode !== 'close' && (\r\n                <SidenavTheme>\r\n                    <Layout1Sidenav />\r\n                </SidenavTheme>\r\n            )}\r\n\r\n            <LayoutContainer\r\n                width={sidenavWidth}\r\n                secondarySidebar={secondarySidebar}\r\n            >\r\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                    // <Layout1Topbar fixed={true} />\r\n                    <ThemeProvider theme={topbarTheme}>\r\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n                    </ThemeProvider>\r\n                )}\r\n                {settings.perfectScrollbar && (\r\n                    <StyledScrollBar>\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                // <Layout1Topbar />\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <Box flexGrow={1} position=\"relative\">\r\n                            <MatxSuspense>\r\n                                {/* {renderRoutes(routes)} */}\r\n                                <Outlet /> \r\n                            </MatxSuspense>\r\n                        </Box>\r\n                        {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )}\r\n                    </StyledScrollBar>\r\n                )}\r\n\r\n                {!settings.perfectScrollbar && (\r\n                    <ContentBox>\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                // <Layout1Topbar />\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <Box flexGrow={1} position=\"relative\">\r\n                            <MatxSuspense>\r\n                                {/* {renderRoutes(routes)} */}\r\n                                <Outlet />\r\n                            </MatxSuspense>\r\n                        </Box>\r\n                        {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )}\r\n                    </ContentBox>\r\n                )}\r\n\r\n                {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </LayoutContainer>\r\n            {settings.secondarySidebar.show && <SecondarySidebar />}\r\n        </Layout1Root>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1)\r\n"],"sourceRoot":""}