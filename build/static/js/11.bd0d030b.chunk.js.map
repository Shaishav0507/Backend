{"version":3,"sources":["app/views/material-kit/auto-complete/AutocompleteCombo.jsx","app/views/material-kit/tables/EditExpense.js","app/views/material-kit/tables/ExpenseTable.js","app/views/material-kit/auto-complete/AppAutoComplete.jsx"],"names":["AutocompleteCombo","props","handleSubmit","bind","event","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","ExpenseId","Category","target","value","Amount","then","res","json","result","alert","error","onSubmit","this","onError","Form","Group","controlId","Control","style","width","marginBottom","size","type","placeholder","name","Button","color","variant","Icon","sx","pl","textTransform","Component","EditExpense","window","location","reload","className","Modal","centered","Header","clooseButton","Title","id","Body","Row","Col","sm","Label","required","defaultValue","Id","cate","amount","marginTop","Footer","onClick","onHide","StyledTable","styled","Table","theme","whiteSpace","paddingLeft","paddingRight","overflow","ExpenseTable","state","deps","addStartShow","editStartShow","response","data","setState","refreshList","confirm","header","editStartClose","Box","tableLayout","TableHead","TableRow","TableCell","TableBody","map","dep","ButtonToolbar","deleteDep","show","Container","margin","breakpoints","down","AppAutoComplete","title","py"],"mappings":"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","file":"static/js/11.bd0d030b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Button, Icon } from '@mui/material'\r\nimport { Form } from 'react-bootstrap'\r\nimport { Span } from 'app/components/Typography'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n\r\nexport class AutocompleteCombo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch('http://localhost:8000/expense/', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                ExpenseId: null,\r\n                Category: event.target.Category.value,\r\n                Amount: event.target.Amount.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    alert(result)\r\n                },\r\n                (error) => {\r\n                    alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <Form.Group controlId=\"Category\">\r\n                        <Form.Control\r\n                            style={{\r\n                                width: '40%',\r\n                                marginBottom: '16px',\r\n                            }}\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Category\"\r\n                            name=\"Category\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"Amount\">\r\n                        <Form.Control\r\n                            style={{\r\n                                width: '40%',\r\n                                marginBottom: '16px',\r\n                            }}\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Amount\"\r\n                            name=\"Amount\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                        <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Add Expense\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nexport class EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch('http://localhost:8000/expense/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                ExpenseId: event.target.ExpenseId.value,\r\n                Category: event.target.Category.value,\r\n                Amount: event.target.Amount.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Button\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"ExpenseId\">\r\n                                        <Form.Label>Sr. No.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            required\r\n                                            defaultValue={this.props.Id}\r\n                                            placeholder=\"ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Category\">\r\n                                        <Form.Label>Category</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"category\"\r\n                                            required\r\n                                            defaultValue={this.props.cate}\r\n                                            placeholder=\"Category\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Amount\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Amount\"\r\n                                            required\r\n                                            defaultValue={this.props.amount}\r\n                                            placeholder=\"Amount\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: '10px' }}>\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Icon,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { EditExpense } from './EditExpense'\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"auto\",\r\n                // textOverflow: \"ellipsis\",\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nexport class ExpenseTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { deps: [], addStartShow: false, editStartShow: false }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch('http://localhost:8000/expense/')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ deps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    deleteDep(ExpenseId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch('http://localhost:8000/expense/' + ExpenseId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            window.location.reload(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deps,\r\n            Id,\r\n            cate,\r\n            amount,\r\n        } = this.state\r\n        //    let addStartClose = () => this.setState({ addStartShow: false })\r\n        let editStartClose = () => this.setState({ editStartShow: false })\r\n\r\n        return (\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n                <StyledTable style={{tableLayout: \"fixed\", whiteSpace: \"pre\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{width: \"150px\"}}>ExpenseId</TableCell>\r\n                            <TableCell style={{width: \"25%\"}}>Category</TableCell>\r\n                            <TableCell style={{width: \"25%\"}}>Amount</TableCell>\r\n                            <TableCell>Options</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {deps.map((dep) => (\r\n                            <TableRow key={dep.ExpenseId}>\r\n                                <TableCell>{dep.ExpenseId}</TableCell>\r\n                                <TableCell>{dep.Category}</TableCell>\r\n                                <TableCell>{dep.Amount}</TableCell>\r\n                                <TableCell>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"info\"\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    editStartShow: true,\r\n                                                    Id: dep.ExpenseId,\r\n                                                    cate: dep.Category,\r\n                                                    amount: dep.Amount,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Icon>edit</Icon>\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteDep(dep.ExpenseId)\r\n                                            }\r\n                                        >\r\n                                            <Icon>delete</Icon>\r\n                                        </Button>\r\n\r\n                                        <EditExpense\r\n                                            show={this.state.editStartShow}\r\n                                            onHide={editStartClose}\r\n                                            Id={Id}\r\n                                            cate={cate}\r\n                                            amount={amount}\r\n                                        />\r\n                                    </ButtonToolbar>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { SimpleCard } from 'app/components'\r\nimport { AutocompleteCombo } from './AutocompleteCombo'\r\nimport { ExpenseTable } from '../tables/ExpenseTable'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppAutoComplete = () => {\r\n    return (\r\n        <Container>\r\n            <SimpleCard title=\"Expenses\">\r\n                <AutocompleteCombo />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Expense Table\">\r\n                <ExpenseTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppAutoComplete\r\n"],"sourceRoot":""}