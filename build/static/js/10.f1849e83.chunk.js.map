{"version":3,"sources":["app/views/sessions/login/JwtLogin.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","IMG","width","JWTRoot","minHeight","maxWidth","borderRadius","margin","StyledProgress","CircularProgress","top","left","JwtLogin","navigate","useNavigate","useState","loading","setLoading","email","password","userInfo","setUserInfo","message","setMessage","login","useAuth","handleChange","target","name","value","temp","palette","useTheme","textError","error","main","textPrimary","primary","handleFormSubmit","event","a","console","log","className","container","item","lg","md","sm","xs","p","src","alt","onSubmit","sx","mb","variant","size","label","onChange","type","validators","errorMessages","control","checked","agreement","color","flexWrap","disabled","mr","ml","textTransform","onClick"],"mappings":"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","file":"static/js/10.f1849e83.chunk.js","sourcesContent":["import {\r\n    Card,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    CircularProgress,\r\n    FormControlLabel,\r\n} from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\r\nimport { Paragraph, Span } from 'app/components/Typography'\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n    justifyContent: 'center',\r\n}))\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    padding: '32px',\r\n    position: 'relative',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst IMG = styled('img')(() => ({\r\n    width: '100%',\r\n}))\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n    background: '#1A2038',\r\n    minHeight: '100% !important',\r\n    '& .card': {\r\n        maxWidth: 800,\r\n        borderRadius: 12,\r\n        margin: '1rem',\r\n    },\r\n}))\r\n\r\nconst StyledProgress = styled(CircularProgress)(() => ({\r\n    position: 'absolute',\r\n    top: '6px',\r\n    left: '25px',\r\n}))\r\n\r\nconst JwtLogin = () => {\r\n    const navigate = useNavigate()\r\n    const [loading, setLoading] = useState(false)\r\n    const [userInfo, setUserInfo] = useState({\r\n        email: 'taxrx.in@taxrx.in',\r\n        password: 'taxrx@1234',\r\n    })\r\n    const [message, setMessage] = useState('')\r\n    const { login } = useAuth()\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        let temp = { ...userInfo }\r\n        temp[name] = value\r\n        setUserInfo(temp)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textError = palette.error.main\r\n    const textPrimary = palette.primary.main\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        setLoading(true)\r\n        try {\r\n            await login(userInfo.email, userInfo.password)\r\n            navigate('/dashboard/default/')\r\n        } catch (e) {\r\n            console.log(e)\r\n            setMessage(e.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <JWTRoot>\r\n            <Card className=\"card\">\r\n                <Grid container>\r\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                        <JustifyBox p={4} height=\"100%\">\r\n                            <IMG\r\n                                src=\"/assets/images/illustrations/dreamer.svg\"\r\n                                alt=\"\"\r\n                            />\r\n                        </JustifyBox>\r\n                    </Grid>\r\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                        <ContentBox>\r\n                            <ValidatorForm onSubmit={handleFormSubmit}>\r\n                                <TextValidator\r\n                                    sx={{ mb: 3, width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label=\"Email\"\r\n                                    onChange={handleChange}\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={userInfo.email}\r\n                                    validators={['required', 'isEmail']}\r\n                                    errorMessages={[\r\n                                        'this field is required',\r\n                                        'email is not valid',\r\n                                    ]}\r\n                                />\r\n                                <TextValidator\r\n                                    sx={{ mb: '12px', width: '100%' }}\r\n                                    label=\"Password\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onChange={handleChange}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={userInfo.password}\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                />\r\n                                <FormControlLabel\r\n                                    sx={{ mb: '12px', maxWidth: 288 }}\r\n                                    name=\"agreement\"\r\n                                    onChange={handleChange}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            size=\"small\"\r\n                                            onChange={({\r\n                                                target: { checked },\r\n                                            }) =>\r\n                                                handleChange({\r\n                                                    target: {\r\n                                                        name: 'agreement',\r\n                                                        value: checked,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                            checked={userInfo.agreement || true}\r\n                                        />\r\n                                    }\r\n                                    label=\"Remeber me\"\r\n                                />\r\n\r\n                                {message && (\r\n                                    <Paragraph sx={{ color: textError }}>\r\n                                        {message}\r\n                                    </Paragraph>\r\n                                )}\r\n\r\n                                <FlexBox mb={2} flexWrap=\"wrap\">\r\n                                    <Box position=\"relative\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            disabled={loading}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Sign in\r\n                                        </Button>\r\n                                        {loading && (\r\n                                            <StyledProgress\r\n                                                size={24}\r\n                                                className=\"buttonProgress\"\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Span sx={{ mr: 1, ml: '20px' }}>or</Span>\r\n                                    <Button\r\n                                        sx={{ textTransform: 'capitalize' }}\r\n                                        onClick={() =>\r\n                                            navigate('/session/signup')\r\n                                        }\r\n                                    >\r\n                                        Sign up\r\n                                    </Button>\r\n                                </FlexBox>\r\n                                <Button\r\n                                    sx={{ color: textPrimary }}\r\n                                    onClick={() =>\r\n                                        navigate('/session/forgot-password')\r\n                                    }\r\n                                >\r\n                                    Forgot password?\r\n                                </Button>\r\n                            </ValidatorForm>\r\n                        </ContentBox>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </JWTRoot>\r\n    )\r\n}\r\n\r\nexport default JwtLogin"],"sourceRoot":""}