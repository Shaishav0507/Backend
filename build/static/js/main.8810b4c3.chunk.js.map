{"version":3,"sources":["app/components/MatxTheme/themeColors.js","utils.js","app/components/MatxLoading/MatxLoading.jsx","app/components/MatxLayout/index.js","app/components/MatxLayout/MatxLayout.jsx","app/components/cards/SimpleCard.jsx","app/components/MatxLayout/Layout1/Layout1Settings.js","app/components/MatxTheme/components.js","app/components/MatxTheme/themeOptions.js","app/components/MatxTheme/initThemes.js","app/components/MatxLayout/settings.js","app/contexts/SettingsContext.js","axios.js","app/contexts/JWTAuthContext.js","app/utils/constant.js","app/hooks/useAuth.js","app/actions/types.js","app/views/material-kit/tables/EditInvoice.js","app/views/material-kit/tables/PaginationTable.jsx","app/containers/Signup.js","app/containers/ResetPassword.js","app/views/sessions/NotFound.jsx","app/views/material-kit/forms/SimpleCustForm.jsx","app/views/material-kit/tables/EditCustomer.js","app/views/material-kit/tables/CustomerTable.js","app/views/material-kit/forms/CustomerForm.jsx","app/views/material-kit/forms/SimpleVendForm.jsx","app/views/material-kit/tables/EditVendor.js","app/views/material-kit/tables/VendorTable.jsx","app/views/material-kit/forms/VendorForm.jsx","app/views/material-kit/forms/Usersform.js","app/views/material-kit/tables/Editstart.js","app/views/material-kit/tables/Usertable.js","app/views/material-kit/forms/Addstart.js","app/views/material-kit/forms/SimpleEstiForm.jsx","app/views/material-kit/tables/EditEstimate.js","app/views/material-kit/tables/EstimateTable.js","app/views/material-kit/forms/EstimateForm.jsx","app/views/material-kit/auto-complete/AutocompleteCombo.jsx","app/views/material-kit/tables/EditExpense.js","app/views/material-kit/tables/ExpenseTable.js","app/views/material-kit/auto-complete/AppAutoComplete.jsx","app/views/material-kit/forms/InvoicesForm.js","app/views/material-kit/forms/AppForm.jsx","app/components/Breadcrumb/Breadcrumb.jsx","app/components/MatxDivider/MatxDivider.jsx","app/components/MatxMenu/MatxMenu.jsx","app/components/MatxToolbarMenu/MatxToolbarMenu.jsx","app/components/MatxSuspense/MatxSuspense.jsx","app/components/MatxSearchBox/MatxSearchBox.jsx","app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx","app/components/MatxVerticalNav/MatxVerticalNav.jsx","app/components/MatxSidenav/MatxSidenavContainer.jsx","app/components/MatxSidenav/MatxSidenav.jsx","app/components/MatxSidenav/MatxSidenavContent.jsx","app/components/MatxTheme/MatxTheme.jsx","app/components/RectangleAvatar/RectangleAvatar.jsx","app/components/MatxListItem1/MatxListItem1.jsx","app/components/ConfirmationDialog/ConfirmationDialog.jsx","app/components/MatxProgressBar/MatxProgressBar.jsx","app/components/Typography.js","fake-db/mock.js","fake-db/db/auth.js","fake-db/index.js","app/containers/Home.js","app/containers/Login.js","app/containers/Activate.js","app/containers/ResetPasswordConfirm.js","app/containers/Pricing/Cards.js","app/containers/Pricing/highpurchases.js","app/containers/Pricing/purchases.js","app/containers/Pricing/Pricing.js","app/components/Navbar.js","app/hocs/Layout.js","app/reducers/auth.js","app/reducers/index.js","app/store.js","app/containers/tax.png","app/containers/GetStarted1.js","app/containers/GetStarted2.js","app/auth/AuthGuard.jsx","app/components/Loadable/Loadable.jsx","app/views/material-kit/MaterialRoutes.js","app/views/dashboard/DashboardRoutes.js","app/views/sessions/SessionRoutes.js","app/containers/Dashboard.js","app/routes/routes.jsx","app/containers/GSTForm.js","app/App.js","index.jsx","app/actions/auth.js","app/hooks/useSettings.js","app/containers/logo.png","app/containers/Logo.js"],"names":["textLight","primary","secondary","disabled","hint","textDark","errorColor","main","themeColors","whitePurple","palette","type","contrastText","background","paper","default","error","text","whiteBlue","slateDark1","slateDark2","purple1","light","dark","purple2","purpleDark1","purpleDark2","blue","blueDark","red","themeShadows","convertHexToRGB","hex","c","match","slice","split","join","test","substring","length","getTimeDifference","date","difference","differenceInSeconds","Date","Math","floor","toFixed","StyledLoading","styled","width","height","display","alignItems","justifyContent","position","left","right","top","Loading","src","alt","className","MatxLayouts","layout1","React","lazy","MatxLayout","props","settings","useSettings","Layout","activeLayout","CardRoot","Card","padding","CardTitle","fontSize","fontWeight","textTransform","marginBottom","subtitle","SimpleCard","children","title","icon","elevation","sx","mb","Layout1Settings","leftSidebar","show","mode","theme","bgImgURL","topbar","fixed","components","MuiTable","styleOverrides","root","tableLayout","MuiTableCell","head","whiteSpace","wordBreak","MUIDataTableSelectCell","paddingLeft","MUIDataTableHeadCell","MUIDataTableBodyCell","MuiButton","contained","boxShadow","MuiCssBaseline","boxSizing","html","MozOsxFontSmoothing","WebkitFontSmoothing","body","a","textDecoration","color","zIndex","MuiFab","MuiAccordion","MuiTooltip","tooltip","MuiMenuItem","MuiExpansionPanel","MuiCard","borderRadius","themeOptions","typography","body1","status","danger","MatxLayoutSettings","activeTheme","perfectScrollbar","themes","forEach","value","key","createTheme","merge","createMatxThemes","layout1Settings","secondarySidebar","open","footer","SettingsContext","createContext","updateSettings","SettingsProvider","useState","currentSettings","setCurrentSettings","Provider","update","marged","axiosInstance","axios","create","interceptors","response","use","Promise","reject","data","initialState","isAuthenticated","isInitialised","user","isValidToken","accessToken","decodedToken","jwtDecode","currentTime","now","exp","setSession","localStorage","setItem","defaults","headers","common","Authorization","removeItem","reducer","state","action","payload","AuthContext","method","login","resolve","logout","register","AuthProvider","useReducer","dispatch","email","password","post","username","useEffect","window","getItem","get","console","topBarHeight","sideNavWidth","sidenavCompactWidth","useAuth","useContext","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","EditInvoice","handleSubmit","bind","event","preventDefault","fetch","process","Accept","JSON","stringify","InvoiceId","target","Name","Invoice_no","Invoice_Date","Payment_Date","Amount","then","res","json","result","location","reload","Modal","this","size","centered","Header","clooseButton","Title","id","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","name","required","defaultValue","Id","placeholder","ino","idate","payment","amount","Button","variant","Footer","onClick","onHide","Component","StyledTable","Table","paddingRight","overflow","PaginationTable","deps","addStartShow","editStartShow","setState","refreshList","VendorId","confirm","header","editStartClose","Box","style","TableHead","TableRow","TableCell","TableBody","map","dep","ButtonToolbar","Icon","deleteDep","connect","auth","signup","accountCreated","setAccountCreated","re_password","formData","setFormData","onChange","e","to","backgroundColor","border","margin","minLength","reset_password","requestSent","setRequestSent","class","for","marginLeft","FlexBox","JustifyBox","maxWidth","flexDirection","IMG","NotFoundRoot","NotFound","navigate","useNavigate","SimpleCustForm","CustomerId","Address","GST","Email","Pan","Contact","Bank","onError","Grid","container","spacing","item","lg","md","xs","mt","FormControlLabel","control","Checkbox","label","pl","EditCustomer","add","gst","contact","acc","marginTop","CustomerTable","Container","breakpoints","down","CustomerForm","py","SimpleVendForm","EditVendor","VendorTable","VendorForm","Usersform","StartId","fname","lname","business","address","code","selected","Editstart","stfname","stlname","stbusiness","staddress","ststate","stcode","Usertable","rowsPerPage","page","TablePagination","px","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","setPage","onChangeRowsPerPage","setRowsPerPage","Addstart","SimpleEstiForm","EstimateId","EstimateNo","Create","Update","Item","Price","EditEstimate","no","price","EstimateTable","AutocompleteCombo","ExpenseId","Category","EditExpense","cate","ExpenseTable","AppAutoComplete","InvoicesForm","AppForm","BreadcrumbRoot","flexWrap","BreadcrumbName","paddingBottom","verticalAlign","SubName","Separator","StyledIcon","Breadcrumb","routeSegments","useTheme","Hidden","xsDown","Breadcrumbs","separator","route","index","path","textAlign","content","divider","MenuButton","hover","MatxMenu","anchorEl","setAnchorEl","Children","toArray","shouldCloseOnItemClick","horizontalPosition","handleClose","currentTarget","menuButton","ThemeProvider","Menu","getContentAnchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","child","MatxSuspense","fallback","MatxLoading","SearchContainer","SearchInput","outline","MatxSearchBox","setOpen","toggle","textColor","Fragment","IconButton","autoFocus","mx","NavExpandRoot","transition","transform","BaseButton","ButtonBase","BulletIcon","marginRight","ItemText","BadgeValue","MatxVerticalNavExpansionPanel","collapsed","setCollapsed","elementRef","useRef","componentHeight","pathname","useLocation","iconText","badge","calcaulateHeight","useCallback","node","current","scrollHeight","getAttribute","clsx","compactNavItem","sidenavHoverShow","collapseIcon","expandIcon","ref","maxHeight","ListLabel","Paragraph","ExtAndIntCommon","ExternalLink","InternalLink","StyledText","Span","MatxVerticalNav","items","renderLevels","href","rel","isActive","ml","memo","bottom","flexGrow","MatxTheme","CssBaseline","opacity","lighten","cursor","paddingTop","fallbacks","LinearProgress","StyledBox","textTransformStyle","ellipsis","textOverflow","H5","lineHeight","Small","Mock","require","JWT_SECRET","JWT_VALIDITY","userList","role","avatar","age","onPost","reply","config","setTimeout","parse","find","u","message","jwt","sign","userId","expiresIn","newUser","push","err","onGet","verify","onAny","passThrough","Home","Logo","verified","setVerified","uid","params","token","reset_password_confirm","new_password","re_new_password","Type","div","Money","Cards","clasName","money","listStyle","meaning1","meaning2","meaning3","highpurchases","purchases","Pricing","gap","emojiTerm","highEmojiTerm","redirect","checkAuthenticated","load_user","access","refresh","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Conatainer","GetStarted1","Tax","float","Left","Right","Wrapper","GetStarted2","log","startIcon","endIcon","AuthGuard","Loadable","AppTable","InvForm","CustForm","VenForm","AppUsers","EstiForm","AppSwitch","materialRoutes","element","Analytics","dashboardRoutes","ForgotPassword","JwtLogin","JwtRegister","sessionRoutes","Dashboard","all_pages","useRoutes","GSTForm","GSTId","Fname","Lname","GSTNo","Phone","State","Code","Account","App","exact","EstimateForm","Login","Signup","VendorForn","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById","img","LOGO"],"mappings":"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","file":"static/js/main.8810b4c3.chunk.js","sourcesContent":["const textLight = {\r\n    primary: 'rgba(52, 49, 76, 1)',\r\n    secondary: 'rgba(52, 49, 76, 0.54)',\r\n    disabled: 'rgba(52, 49, 76, 0.38)',\r\n    hint: 'rgba(52, 49, 76, 0.38)',\r\n}\r\n\r\nconst textDark = {\r\n    primary: '#fff',\r\n    secondary: 'rgba(255, 255, 255, 0.7)',\r\n    disabled: 'rgba(255, 255, 255, 0.64)',\r\n    hint: 'rgba(255, 255, 255, 0.64)',\r\n}\r\n\r\nconst secondaryColor = {\r\n    light: '#f9a352',\r\n    main: '#ff9e43',\r\n    dark: '#ff932e',\r\n    contrastText: textLight.primary,\r\n}\r\nconst errorColor = {\r\n    main: '#FF3D57',\r\n}\r\n\r\nexport const themeColors = {\r\n    whitePurple: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            background: {\r\n                paper: '#fff',\r\n                default: '#fafafa',\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    whiteBlue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            background: {\r\n                paper: '#fff',\r\n                default: '#fafafa',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    slateDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#222A45',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n            text: textDark,\r\n        },\r\n    },\r\n    slateDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1a2038',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n            text: textDark,\r\n        },\r\n    },\r\n    purple1: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: secondaryColor,\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#fff',\r\n                default: '#fafafa',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    purple2: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#fff',\r\n                default: '#fafafa',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    purpleDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n            text: textDark,\r\n        },\r\n    },\r\n    purpleDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n            text: textDark,\r\n        },\r\n    },\r\n    blue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#fff',\r\n                default: '#fafafa',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    blueDark: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FF4F30',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n            text: textDark,\r\n        },\r\n    },\r\n    red: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#e53935',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textDark,\r\n        },\r\n    },\r\n}\r\n\r\nexport const themeShadows = [\r\n    'none',\r\n    '0px 2px 1px -1px rgba(0, 0, 0, 0.06),0px 1px 1px 0px rgba(0, 0, 0, 0.042),0px 1px 3px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 1px -2px rgba(0, 0, 0, 0.06),0px 2px 2px 0px rgba(0, 0, 0, 0.042),0px 1px 5px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 3px -2px rgba(0, 0, 0, 0.06),0px 3px 4px 0px rgba(0, 0, 0, 0.042),0px 1px 8px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 2px 4px -1px rgba(0, 0, 0, 0.06),0px 4px 5px 0px rgba(0, 0, 0, 0.042),0px 1px 10px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 5px 8px 0px rgba(0, 0, 0, 0.042),0px 1px 14px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 6px 10px 0px rgba(0, 0, 0, 0.042),0px 1px 18px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 4px 5px -2px rgba(0, 0, 0, 0.06),0px 7px 10px 1px rgba(0, 0, 0, 0.042),0px 2px 16px 1px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 5px -3px rgba(0, 0, 0, 0.06),0px 8px 10px 1px rgba(0, 0, 0, 0.042),0px 3px 14px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 6px -3px rgba(0, 0, 0, 0.06),0px 9px 12px 1px rgba(0, 0, 0, 0.042),0px 3px 16px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 6px -3px rgba(0, 0, 0, 0.06),0px 10px 14px 1px rgba(0, 0, 0, 0.042),0px 4px 18px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 7px -4px rgba(0, 0, 0, 0.06),0px 11px 15px 1px rgba(0, 0, 0, 0.042),0px 4px 20px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 12px 17px 2px rgba(0, 0, 0, 0.042),0px 5px 22px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 13px 19px 2px rgba(0, 0, 0, 0.042),0px 5px 24px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 9px -4px rgba(0, 0, 0, 0.06),0px 14px 21px 2px rgba(0, 0, 0, 0.042),0px 5px 26px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 9px -5px rgba(0, 0, 0, 0.06),0px 15px 22px 2px rgba(0, 0, 0, 0.042),0px 6px 28px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 10px -5px rgba(0, 0, 0, 0.06),0px 16px 24px 2px rgba(0, 0, 0, 0.042),0px 6px 30px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 11px -5px rgba(0, 0, 0, 0.06),0px 17px 26px 2px rgba(0, 0, 0, 0.042),0px 6px 32px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 11px -5px rgba(0, 0, 0, 0.06),0px 18px 28px 2px rgba(0, 0, 0, 0.042),0px 7px 34px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 12px -6px rgba(0, 0, 0, 0.06),0px 19px 29px 2px rgba(0, 0, 0, 0.042),0px 7px 36px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n]\r\n","import { differenceInSeconds } from 'date-fns'\r\n\r\nexport const convertHexToRGB = (hex) => {\r\n    // check if it's a rgba\r\n    if (hex.match('rgba')) {\r\n        let triplet = hex.slice(5).split(',').slice(0, -1).join(',')\r\n        return triplet\r\n    }\r\n\r\n    let c\r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n        c = hex.substring(1).split('')\r\n        if (c.length === 3) {\r\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]]\r\n        }\r\n        c = '0x' + c.join('')\r\n\r\n        return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',')\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n    var timeout\r\n    return function () {\r\n        var context = this,\r\n            args = arguments\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(function () {\r\n            timeout = null\r\n            if (!immediate) func.apply(context, args)\r\n        }, wait)\r\n        if (immediate && !timeout) func.apply(context, args)\r\n    }\r\n}\r\n\r\nexport function isMobile() {\r\n    if (window) {\r\n        return window.matchMedia(`(max-width: 767px)`).matches\r\n    }\r\n    return false\r\n}\r\n\r\nexport function isMdScreen() {\r\n    if (window) {\r\n        return window.matchMedia(`(max-width: 1199px)`).matches\r\n    }\r\n    return false\r\n}\r\n\r\nfunction currentYPosition(elm) {\r\n    if (!window && !elm) {\r\n        return\r\n    }\r\n    if (elm) return elm.scrollTop\r\n    // Firefox, Chrome, Opera, Safari\r\n    if (window.pageYOffset) return window.pageYOffset\r\n    // Internet Explorer 6 - standards mode\r\n    if (document.documentElement && document.documentElement.scrollTop)\r\n        return document.documentElement.scrollTop\r\n    // Internet Explorer 6, 7 and 8\r\n    if (document.body.scrollTop) return document.body.scrollTop\r\n    return 0\r\n}\r\n\r\nfunction elmYPosition(elm) {\r\n    var y = elm.offsetTop\r\n    var node = elm\r\n    while (node.offsetParent && node.offsetParent !== document.body) {\r\n        node = node.offsetParent\r\n        y += node.offsetTop\r\n    }\r\n    return y\r\n}\r\n\r\nexport function scrollTo(scrollableElement, elmID) {\r\n    var elm = document.getElementById(elmID)\r\n\r\n    if (!elmID || !elm) {\r\n        return\r\n    }\r\n\r\n    var startY = currentYPosition(scrollableElement)\r\n    var stopY = elmYPosition(elm)\r\n\r\n    var distance = stopY > startY ? stopY - startY : startY - stopY\r\n    if (distance < 100) {\r\n        scrollTo(0, stopY)\r\n        return\r\n    }\r\n    var speed = Math.round(distance / 50)\r\n    if (speed >= 20) speed = 20\r\n    var step = Math.round(distance / 25)\r\n    var leapY = stopY > startY ? startY + step : startY - step\r\n    var timer = 0\r\n    if (stopY > startY) {\r\n        for (var i = startY; i < stopY; i += step) {\r\n            setTimeout(\r\n                (function (leapY) {\r\n                    return () => {\r\n                        scrollableElement.scrollTo(0, leapY)\r\n                    }\r\n                })(leapY),\r\n                timer * speed\r\n            )\r\n            leapY += step\r\n            if (leapY > stopY) leapY = stopY\r\n            timer++\r\n        }\r\n        return\r\n    }\r\n    for (let i = startY; i > stopY; i -= step) {\r\n        setTimeout(\r\n            (function (leapY) {\r\n                return () => {\r\n                    scrollableElement.scrollTo(0, leapY)\r\n                }\r\n            })(leapY),\r\n            timer * speed\r\n        )\r\n        leapY -= step\r\n        if (leapY < stopY) leapY = stopY\r\n        timer++\r\n    }\r\n    return false\r\n}\r\n\r\nexport function getTimeDifference(date) {\r\n    let difference = differenceInSeconds(new Date(), date)\r\n\r\n    if (difference < 60) return `${Math.floor(difference)} sec`\r\n    else if (difference < 3600) return `${Math.floor(difference / 60)} min`\r\n    else if (difference < 86400) return `${Math.floor(difference / 3660)} h`\r\n    else if (difference < 86400 * 30)\r\n        return `${Math.floor(difference / 86400)} d`\r\n    else if (difference < 86400 * 30 * 12)\r\n        return `${Math.floor(difference / 86400 / 30)} mon`\r\n    else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`\r\n}\r\n\r\nexport function generateRandomId() {\r\n    let tempId = Math.random().toString()\r\n    let uid = tempId.substr(2, tempId.length - 1)\r\n    return uid\r\n}\r\n\r\nexport function getQueryParam(prop) {\r\n    var params = {}\r\n    var search = decodeURIComponent(\r\n        window.location.href.slice(window.location.href.indexOf('?') + 1)\r\n    )\r\n    var definitions = search.split('&')\r\n    definitions.forEach(function (val, key) {\r\n        var parts = val.split('=', 2)\r\n        params[parts[0]] = parts[1]\r\n    })\r\n    return prop && prop in params ? params[prop] : params\r\n}\r\n\r\nexport function classList(classes) {\r\n    return Object.entries(classes)\r\n        .filter((entry) => entry[1])\r\n        .map((entry) => entry[0])\r\n        .join(' ')\r\n}\r\n","import React from 'react'\r\nimport { Box, styled } from '@mui/system'\r\nimport { CircularProgress } from '@mui/material'\r\n\r\nconst StyledLoading = styled('div')(() => ({\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '& img': {\r\n        width: 'auto',\r\n        height: '25px',\r\n    },\r\n    \"& .circleProgress\": {\r\n        position: 'absolute',\r\n        left: -7,\r\n        right: 0,\r\n        top: 'calc(50% - 25px)',\r\n    }\r\n}))\r\n\r\nconst Loading = () => {\r\n\r\n    return (\r\n        <StyledLoading>\r\n            <Box position=\"relative\">\r\n                <img src=\"/assets/images/logo-circle.svg\" alt=\"\" />\r\n                <CircularProgress className=\"circleProgress\" />\r\n            </Box>\r\n        </StyledLoading>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\n\r\nexport const MatxLayouts = {\r\n    layout1: React.lazy(() => import('./Layout1/Layout1')),\r\n}\r\n","import React from 'react'\r\nimport { MatxLayouts } from './index'\r\nimport { MatxSuspense } from 'app/components'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst MatxLayout = (props) => {\r\n    const { settings } = useSettings()\r\n    const Layout = MatxLayouts[settings.activeLayout]\r\n\r\n    return (\r\n        <MatxSuspense>\r\n            <Layout {...props} />\r\n        </MatxSuspense>\r\n    )\r\n}\r\n\r\nexport default MatxLayout\r\n","import React from 'react'\r\nimport { Card } from '@mui/material'\r\nimport { styled, Box } from '@mui/system'\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n    height: '100%',\r\n    padding: '20px 24px',\r\n}))\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n    marginBottom: !subtitle && \"16px\",\r\n}))\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n    return (\r\n        <CardRoot elevation={6}>\r\n            <CardTitle subtitle={subtitle}>\r\n                {title}\r\n            </CardTitle>\r\n            {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n            {children}\r\n        </CardRoot>\r\n    )\r\n}\r\n\r\nexport default SimpleCard\r\n","const Layout1Settings = {\r\n    leftSidebar: {\r\n        show: true,\r\n        mode: 'full', // full, close, compact, mobile,\r\n        theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n        bgImgURL: '/assets/images/sidebar/sidebar-bg-dark.jpg',\r\n    },\r\n    topbar: {\r\n        show: true,\r\n        fixed: true,\r\n        theme: 'whiteBlue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    },\r\n}\r\n\r\nexport default Layout1Settings\r\n","import { themeShadows } from './themeColors'\r\n\r\nexport const components = {\r\n    MuiTable: {\r\n        styleOverrides: {\r\n            root: {\r\n                tableLayout: 'fixed',\r\n            },\r\n        },\r\n    },\r\n    MuiTableCell: {\r\n        styleOverrides: {\r\n            head: {\r\n                fontSize: '13px',\r\n                padding: '12px 0px',\r\n            },\r\n            root: {\r\n                fontSize: '14px',\r\n                whiteSpace: 'pre-wrap',\r\n                wordBreak: 'break-all',\r\n                padding: '12px 8px 12px 0px',\r\n            },\r\n        },\r\n    },\r\n    MUIDataTableSelectCell: {\r\n        styleOverrides: {\r\n            root: {\r\n                paddingLeft: 12,\r\n            },\r\n        },\r\n    },\r\n    MUIDataTableHeadCell: {\r\n        styleOverrides: {\r\n            root: {\r\n                paddingLeft: 16,\r\n            },\r\n        },\r\n    },\r\n    MUIDataTableBodyCell: {\r\n        styleOverrides: {\r\n            root: {\r\n                paddingLeft: 8,\r\n            },\r\n        },\r\n    },\r\n    MuiButton: {\r\n        styleOverrides: {\r\n            root: {\r\n                fontSize: '14px',\r\n                textTransform: 'none',\r\n                fontWeight: '400',\r\n            },\r\n            contained: {\r\n                boxShadow: themeShadows[8],\r\n            },\r\n        },\r\n    },\r\n    MuiCssBaseline: {\r\n        styleOverrides: {\r\n            '*': {\r\n                boxSizing: 'border-box',\r\n            },\r\n            html: {\r\n                MozOsxFontSmoothing: 'grayscale',\r\n                WebkitFontSmoothing: 'antialiased',\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n            body: {\r\n                height: '100%',\r\n            },\r\n            a: {\r\n                textDecoration: 'none',\r\n                color: 'inherit',\r\n            },\r\n            '#root': {\r\n                height: '100%',\r\n            },\r\n            '#nprogress .bar': {\r\n                zIndex: '2000 !important',\r\n            },\r\n        },\r\n    },\r\n    MuiFab: {\r\n        styleOverrides: {\r\n            root: {\r\n                boxShadow: themeShadows[12],\r\n            },\r\n        },\r\n    },\r\n    MuiAccordion: {\r\n        styleOverrides: {\r\n            root: {\r\n                '&:before': {\r\n                    display: 'none',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    MuiTooltip: {\r\n        styleOverrides: {\r\n            tooltip: {\r\n                fontSize: '11px',\r\n            },\r\n        },\r\n    },\r\n    MuiMenuItem: {\r\n        styleOverrides: {\r\n            root: {\r\n                fontSize: '0.875rem',\r\n            },\r\n        },\r\n    },\r\n    MuiExpansionPanel: {\r\n        styleOverrides: {\r\n            root: {\r\n                '&:before': {\r\n                    display: 'none',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    MuiCard: {\r\n        styleOverrides: {\r\n            root: {\r\n                borderRadius: '8px',\r\n                boxShadow:\r\n                    '0px 3px 3px -2px rgb(0 0 0 / 6%), 0px 3px 4px 0px rgb(0 0 0 / 4%), 0px 1px 8px 0px rgb(0 0 0 / 4%) !important',\r\n            },\r\n        },\r\n    },\r\n}\r\n","import { red } from '@mui/material/colors'\r\nimport { components } from './components'\r\n\r\nconst themeOptions = {\r\n    typography: {\r\n        fontSize: 14,\r\n        body1: {\r\n            fontSize: '14px',\r\n        },\r\n    },\r\n\r\n    status: {\r\n        danger: red[500],\r\n    },\r\n    components: {\r\n        ...components,\r\n    },\r\n}\r\n\r\nexport default themeOptions\r\n","import { forEach, merge } from 'lodash'\r\nimport themeOptions from './themeOptions'\r\nimport { themeColors } from './themeColors'\r\nimport { createTheme } from '@mui/material'\r\n\r\nfunction createMatxThemes() {\r\n    let themes = {}\r\n\r\n    forEach(themeColors, (value, key) => {\r\n        themes[key] = createTheme(merge({}, themeOptions, value))\r\n    })\r\n    return themes\r\n}\r\nexport const themes = createMatxThemes()\r\n","import layout1Settings from './Layout1/Layout1Settings'\r\nimport { themes } from '../MatxTheme/initThemes'\r\n\r\n// UPDATE BELOW CODE\r\n// DOC http://demos.ui-lib.com/matx-react-doc/layout.html\r\nexport const MatxLayoutSettings = {\r\n    activeLayout: 'layout1', // layout1, layout2\r\n    activeTheme: 'blue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    perfectScrollbar: false,\r\n\r\n    themes: themes,\r\n    layout1Settings, // open Layout1/Layout1Settings.js\r\n\r\n    secondarySidebar: {\r\n        show: true,\r\n        open: false,\r\n        theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    },\r\n    // Footer options\r\n    footer: {\r\n        show: true,\r\n        fixed: false,\r\n        theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    },\r\n}\r\n","import React, { createContext, useState } from 'react'\r\n\r\nimport { merge } from 'lodash'\r\n\r\nimport { MatxLayoutSettings } from 'app/components/MatxLayout/settings'\r\n\r\nconst SettingsContext = createContext({\r\n    settings: MatxLayoutSettings,\r\n    updateSettings: () => {},\r\n})\r\n\r\nexport const SettingsProvider = ({ settings, children }) => {\r\n    const [currentSettings, setCurrentSettings] = useState(\r\n        settings || MatxLayoutSettings\r\n    )\r\n\r\n    const handleUpdateSettings = (update = {}) => {\r\n        const marged = merge({}, currentSettings, update)\r\n        setCurrentSettings(marged)\r\n    }\r\n\r\n    return (\r\n        <SettingsContext.Provider\r\n            value={{\r\n                settings: currentSettings,\r\n                updateSettings: handleUpdateSettings,\r\n            }}\r\n        >\r\n            {children}\r\n        </SettingsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SettingsContext\r\n","import axios from 'axios'\r\n\r\nconst axiosInstance = axios.create()\r\n\r\naxiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) =>\r\n        Promise.reject(\r\n            (error.response && error.response.data) || 'Something went wrong!'\r\n        )\r\n)\r\n\r\nexport default axiosInstance\r\n","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from 'axios.js'\r\nimport { MatxLoading } from 'app/components'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    isInitialised: false,\r\n    user: null,\r\n}\r\n\r\nconst isValidToken = (accessToken) => {\r\n    if (!accessToken) {\r\n        return false\r\n    }\r\n\r\n    const decodedToken = jwtDecode(accessToken)\r\n    const currentTime = Date.now() / 1000\r\n    return decodedToken.exp > currentTime\r\n}\r\n\r\nconst setSession = (accessToken) => {\r\n    if (accessToken) {\r\n        localStorage.setItem('accessToken', accessToken)\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`\r\n    } else {\r\n        localStorage.removeItem('accessToken')\r\n        delete axios.defaults.headers.common.Authorization\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INIT': {\r\n            const { isAuthenticated, user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated,\r\n                isInitialised: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGIN': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGOUT': {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case 'REGISTER': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    ...initialState,\r\n    method: 'JWT',\r\n    login: () => Promise.resolve(),\r\n    logout: () => { },\r\n    register: () => Promise.resolve(),\r\n})\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const login = async (email, password) => {\r\n        const response = await axios.post('/api/auth/login', {\r\n            email,\r\n            password,\r\n        })\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const register = async (email, username, password) => {\r\n        const response = await axios.post('/api/auth/register', {\r\n            email,\r\n            username,\r\n            password,\r\n        })\r\n\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'REGISTER',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setSession(null)\r\n        dispatch({ type: 'LOGOUT' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        ; (async () => {\r\n            try {\r\n                const accessToken = window.localStorage.getItem('accessToken')\r\n\r\n                if (accessToken && isValidToken(accessToken)) {\r\n                    setSession(accessToken)\r\n                    const response = await axios.get('/api/auth/profile')\r\n                    const { user } = response.data\r\n\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: true,\r\n                            user,\r\n                        },\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: false,\r\n                            user: null,\r\n                        },\r\n                    })\r\n                }\r\n            } catch (err) {\r\n                console.error(err)\r\n                dispatch({\r\n                    type: 'INIT',\r\n                    payload: {\r\n                        isAuthenticated: false,\r\n                        user: null,\r\n                    },\r\n                })\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    if (!state.isInitialised) {\r\n        return <MatxLoading />\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                ...state,\r\n                method: 'JWT',\r\n                login,\r\n                logout,\r\n                register,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext\r\n","export const topBarHeight = 64\r\nexport const sideNavWidth = 260\r\nexport const navbarHeight = 60\r\nexport const sidenavCompactWidth = 80\r\nexport const containedLayoutWidth = 1200","import { useContext } from 'react'\r\nimport AuthContext from 'app/contexts/JWTAuthContext'\r\n\r\nconst useAuth = () => useContext(AuthContext)\r\n\r\nexport default useAuth\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nexport class EditInvoice extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/invoice/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                InvoiceId: event.target.InvoiceId.value,\r\n                Name: event.target.Name.value,\r\n                Invoice_no: event.target.Invoice_no.value,\r\n                Invoice_Date: event.target.Invoice_Date.value,\r\n                Payment_Date: event.target.Payment_Date.value,\r\n                Amount: event.target.Amount.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Button\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"InvoiceId\">\r\n                                        <Form.Label>Sr. No.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            required\r\n                                            defaultValue={this.props.Id}\r\n                                            placeholder=\"ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Name\"\r\n                                            required\r\n                                            defaultValue={this.props.name}\r\n                                            placeholder=\"Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Invoice_no\">\r\n                                        <Form.Label>Invoice No.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Invoice_no\"\r\n                                            required\r\n                                            defaultValue={this.props.ino}\r\n                                            placeholder=\"Invoice No.\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Inoice_Date\">\r\n                                        <Form.Label>Invoice Date</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"date\"\r\n                                            name=\"Invoice_Date\"\r\n                                            required\r\n                                            defaultValue={this.props.idate}\r\n                                            placeholder=\"Invoice Date\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Payment_Date\">\r\n                                        <Form.Label>Payment Date</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"date\"\r\n                                            name=\"Payment_Date\"\r\n                                            required\r\n                                            defaultValue={this.props.payment}\r\n                                            placeholder=\"Payment_Date\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Amount\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"Amount\"\r\n                                            required\r\n                                            defaultValue={this.props.amount}\r\n                                            placeholder=\"Amount\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Icon,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\nimport { EditInvoice } from './EditInvoice'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"auto\",\r\n                // textOverflow: \"ellipsis\",\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nexport class PaginationTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { deps: [], addStartShow: false, editStartShow: false }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(`${process.env.REACT_APP_API_URL}/invoice/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ deps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    deleteDep(VendorId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(`${process.env.REACT_APP_API_URL}/invoice/` + VendorId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            window.location.reload(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deps,\r\n            Id,\r\n            name,\r\n            ino,\r\n            idate,\r\n            payment,\r\n            amount,\r\n           \r\n        } = this.state\r\n        //    let addStartClose = () => this.setState({ addStartShow: false })\r\n        let editStartClose = () => this.setState({ editStartShow: false })\r\n\r\n        return (\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n                <StyledTable style={{tableLayout: \"fixed\", whiteSpace: \"pre\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>InvoiceId</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Invoice No</TableCell>\r\n                            <TableCell>Invoice Date</TableCell>\r\n                            <TableCell>Payment Date</TableCell>\r\n                            <TableCell>Amount</TableCell>\r\n                            <TableCell>Options</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {deps.map((dep) => (\r\n                            <TableRow key={dep.InvoiceId}>\r\n                                <TableCell>{dep.InvoiceId}</TableCell>\r\n                                <TableCell>{dep.Name}</TableCell>\r\n                                <TableCell>{dep.Invoice_no}</TableCell>\r\n                                <TableCell>{dep.Invoice_Date}</TableCell>\r\n                                <TableCell>{dep.Payment_Date}</TableCell>\r\n                                <TableCell>{dep.Amount}</TableCell>\r\n                                \r\n                                <TableCell>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"info\"\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    editStartShow: true,\r\n                                                    Id: dep.InvoiceId,\r\n                                                    name: dep.Name,\r\n                                                    ino: dep.Invoice_no,\r\n                                                    idate: dep.Invoice_Date,\r\n                                                    payment: dep.Payment_Date,\r\n                                                    amount: dep.Amount,\r\n                                                    \r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Icon>edit</Icon>\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteDep(dep.InvoiceId)\r\n                                            }\r\n                                        >\r\n                                            <Icon>delete</Icon>\r\n                                        </Button>\r\n\r\n                                        <EditInvoice\r\n                                            show={this.state.editStartShow}\r\n                                            onHide={editStartClose}\r\n                                            Id={Id}\r\n                                            name={name}\r\n                                            ino={ino}\r\n                                            idate={idate}\r\n                                            payment={payment}\r\n                                            amount={amount}\r\n                                           \r\n                                        />\r\n                                    </ButtonToolbar>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom-old'\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../actions/auth'\r\nimport Logo from './Logo'\r\nimport { Button } from '@mui/material'\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        // last_name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: '',\r\n    })\r\n\r\n    const { name, email, password, re_password } = formData\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password === re_password) {\r\n            signup(name, email, password, re_password)\r\n            setAccountCreated(true)\r\n        }\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-2   \">\r\n            <Logo />\r\n            <div\r\n                style={{\r\n                    backgroundColor: '#fff',\r\n                    padding: '25px',\r\n                    border: '1px solid #dfdfdf',\r\n                    borderRadius: '50px 50px',\r\n                    width: '350px',\r\n                    margin: 'auto',\r\n                }}\r\n            >\r\n                <h1 className=\" d-flex flex-column align-items-center justify-content-center\">\r\n                    Sign Up\r\n                </h1>\r\n                <p className=\" d-flex flex-column align-items-center justify-content-center\">\r\n                    Create your Account\r\n                </p>\r\n                <form\r\n                    onSubmit={(e) => onSubmit(e)}\r\n                    className=\" d-flex flex-column align-items-center justify-content-center\"\r\n                >\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            style={{ borderRadius:'15px'}}\r\n                            onChange={(e) => onChange(e)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {/* <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Last Name*'\r\n                        name='last_name'\r\n                        value={last_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div> */}\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            style={{ borderRadius:'15px'}}\r\n                            onChange={(e) => onChange(e)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            style={{ borderRadius:'15px'}}\r\n                            onChange={(e) => onChange(e)}\r\n                            minLength=\"6\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"re_password\"\r\n                            value={re_password}\r\n                            style={{ borderRadius:'15px'}}\r\n                            onChange={(e) => onChange(e)}\r\n                            minLength=\"6\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        className=\"btn btn-primary btn-block\"\r\n                        style={{ width: '170px', borderRadius: '50px 50px' }}\r\n                        type=\"submit\"\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <p className=\"mt-3 d-flex align-items-center justify-content-center\">\r\n                Already have an account?<Link to=\"/login\"> Sign In</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup)\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom-old'\r\nimport { connect } from 'react-redux'\r\nimport { reset_password } from '../actions/auth'\r\nimport Logo from './Logo'\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n    })\r\n\r\n    const { email } = formData\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        reset_password(email)\r\n        setRequestSent(true)\r\n    }\r\n\r\n    if (requestSent) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-2 justify-content-center flex-column align-items-center d-flex\">\r\n            <Logo />\r\n            <div\r\n                className=\"forgot\"\r\n                style={{\r\n                    backgroundColor: '#fff',\r\n                    padding: '12px',\r\n                    border: '1px solid #dfdfdf',\r\n                    borderRadius: '20px',\r\n                }}\r\n            >\r\n                <h2>Forgot your password?</h2>\r\n                <p>\r\n                    Change your password in three easy steps. \r\n                    This will help you to secure your password!\r\n                </p>\r\n                <ol class=\"list-unstyled mb-5\">\r\n                    <li>\r\n                        <span class=\"text-primary text-medium\">1. </span>Enter\r\n                        your email address below.\r\n                    </li>\r\n                    <li>\r\n                        <span class=\"text-primary text-medium\">2. </span>Our\r\n                        system will send you a temporary link.\r\n                    </li>\r\n                    <li>\r\n                        <span class=\"text-primary text-medium\">3. </span>Use the\r\n                        link to reset your password\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            <form onSubmit={(e) => onSubmit(e)} className=\"card mt-4\" style={{ borderRadius: '20px' }}>\r\n                <div class=\"card-body\">\r\n                    <div className=\"  form-group\">\r\n                        <label for=\"email-for-pass\">\r\n                            <b>Enter your email address</b>\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control outline: 0\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            style={{ borderRadius:'15px'}}\r\n                            onChange={(e) => onChange(e)}\r\n                            required\r\n                        />\r\n                        <small class=\"form-text text-muted\">\r\n                            Enter the email address you used during the\r\n                            registration on Taxrx.com. Then we'll email a link\r\n                            to this address.\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <button\r\n                        className=\"btn btn-primary btn-block\"\r\n                        style={{ width: '230px', borderRadius: '50px 50px', marginLeft: '190px' }}\r\n                        type=\"submit\"\r\n                    >\r\n                        Reset Password\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { reset_password })(ResetPassword)\r\n","import React from 'react'\r\nimport { Button } from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n    maxWidth: 320,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n}))\r\n\r\nconst IMG = styled('img')(() => ({\r\n    width: '100%',\r\n    marginBottom: '32px',\r\n}))\r\n\r\nconst NotFoundRoot = styled(FlexBox)(() => ({\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh !important',\r\n}))\r\n\r\nconst NotFound = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <NotFoundRoot>\r\n            <JustifyBox>\r\n                <IMG src=\"/assets/images/illustrations/404.svg\" alt=\"\" />\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ textTransform: 'capitalize' }}\r\n                    onClick={() => navigate(-1)}\r\n                >\r\n                    Back to Dashboard\r\n                </Button>\r\n            </JustifyBox>\r\n        </NotFoundRoot>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ValidatorForm} from 'react-material-ui-form-validator'\r\n\r\nexport class SimpleCustForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/customer/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                CustomerId: null,\r\n                Name: event.target.Name.value,\r\n                Address: event.target.Address.value,\r\n                GST: event.target.GST.value,\r\n                Email: event.target.Email.value,\r\n                Pan: event.target.Pan.value,\r\n                Contact: event.target.Contact.value,\r\n                Bank:event.target.Bank.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        // const handleFileUpload = () => {}\r\n        return (\r\n            <div>\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <Grid container spacing={6}>\r\n                        <Grid item lg={6} md={4} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"Name\">\r\n                                <Form.Control\r\n                                    //  className=\" mb-2 p-2\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"Name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Address\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Address\"\r\n                                    name=\"Address\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"GST\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"GST\"\r\n                                    name=\"GST\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <FormControlLabel\r\n                                control={<Checkbox />}\r\n                                label=\"I have read and agree to the terms of service.\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"Email\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    name=\"Email\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId=\"Pan\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"PAN No.\"\r\n                                    name=\"Pan\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Contact\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Contact\"\r\n                                    name=\"Contact\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Bank\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Account Number\"\r\n                                    name=\"Banks\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                \r\n                    >\r\n                        <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Add Customer\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nexport class EditCustomer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/customer/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                CustomerId: event.target.CustomerId.value,\r\n                Name: event.target.Name.value,\r\n                Address: event.target.Address.value,\r\n                GST: event.target.GST.value,\r\n                Email: event.target.Email.value,\r\n                Pan: event.target.Pan.value,\r\n                Contact: event.target.Contact.value,\r\n                Bank:event.target.Bank.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Button\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"CustomerId\">\r\n                                        <Form.Label>Sr. No.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            required\r\n                                            defaultValue={this.props.Id}\r\n                                            placeholder=\"ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Name\"\r\n                                            required\r\n                                            defaultValue={this.props.name}\r\n                                            placeholder=\"Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Address\">\r\n                                        <Form.Label>Address</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Address\"\r\n                                            required\r\n                                            defaultValue={this.props.add}\r\n                                            placeholder=\"Address\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"GST\">\r\n                                        <Form.Label>GST</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"GST\"\r\n                                            required\r\n                                            defaultValue={this.props.gst}\r\n                                            placeholder=\"GST\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            name=\"Email\"\r\n                                            required\r\n                                            defaultValue={this.props.email}\r\n                                            placeholder=\"Email\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Pan\">\r\n                                        <Form.Label>Pan</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Pan\"\r\n                                            required\r\n                                            defaultValue={this.props.Pan}\r\n                                            placeholder=\"Pan\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Contact\">\r\n                                        <Form.Label>Contact</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Contact\"\r\n                                            required\r\n                                            defaultValue={this.props.contact}\r\n                                            placeholder=\"Contact\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Bank\">\r\n                                        <Form.Label>Bank</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Bank\"\r\n                                            required\r\n                                            defaultValue={this.props.acc}\r\n                                            placeholder=\"Bank\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: '10px' }}>\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Icon,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { EditCustomer } from './EditCustomer'\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"auto\",\r\n                // textOverflow: \"ellipsis\",\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nexport class CustomerTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { deps: [], addStartShow: false, editStartShow: false }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(`${process.env.REACT_APP_API_URL}/customer/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ deps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    deleteDep(CustomerId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(`${process.env.REACT_APP_API_URL}/customer/` + CustomerId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            window.location.reload(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deps,\r\n            Id,\r\n            name,\r\n            add,\r\n            gst,\r\n            email,\r\n            Pan,\r\n            contact,\r\n            acc,\r\n        } = this.state\r\n        //    let addStartClose = () => this.setState({ addStartShow: false })\r\n        let editStartClose = () => this.setState({ editStartShow: false })\r\n\r\n        return (\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n                <StyledTable style={{tableLayout: \"fixed\", whiteSpace: \"pre\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{width: \"80px\"}}>CustomerId</TableCell>\r\n                            <TableCell style={{width: \"12%\"}}>Name</TableCell>\r\n                            <TableCell style={{width: \"12%\"}}>Address</TableCell>\r\n                            <TableCell style={{width: \"120px\"}}>GST No.</TableCell>\r\n                            <TableCell style={{width: \"16%\"}}>Email</TableCell>\r\n                            <TableCell style={{width: \"110px\"}}>PAN</TableCell>\r\n                            <TableCell style={{width: \"12s0px\"}}>Contact No.</TableCell>\r\n                            <TableCell>Account No.</TableCell>\r\n                            <TableCell>Options</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {deps.map((dep) => (\r\n                            <TableRow key={dep.CustomerId}>\r\n                                <TableCell>{dep.CustomerId}</TableCell>\r\n                                <TableCell>{dep.Name}</TableCell>\r\n                                <TableCell>{dep.Address}</TableCell>\r\n                                <TableCell>{dep.GST}</TableCell>\r\n                                <TableCell>{dep.Email}</TableCell>\r\n                                <TableCell>{dep.Pan}</TableCell>\r\n                                <TableCell>{dep.Contact}</TableCell>\r\n                                <TableCell>{dep.Bank}</TableCell>\r\n                                <TableCell>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"info\"\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    editStartShow: true,\r\n                                                    Id: dep.CustomerId,\r\n                                                    name: dep.Name,\r\n                                                    add: dep.Address,\r\n                                                    gst: dep.GST,\r\n                                                    email: dep.Email,\r\n                                                    Pan: dep.Pan,\r\n                                                    contact: dep.Contact,\r\n                                                    acc:dep.Bank,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Icon>edit</Icon>\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteDep(dep.CustomerId)\r\n                                            }\r\n                                        >\r\n                                            <Icon>delete</Icon>\r\n                                        </Button>\r\n\r\n                                        <EditCustomer\r\n                                            show={this.state.editStartShow}\r\n                                            onHide={editStartClose}\r\n                                            Id={Id}\r\n                                            name={name}\r\n                                            add={add}\r\n                                            gst={gst}\r\n                                            email={email}\r\n                                            Pan={Pan}\r\n                                            contact={contact}\r\n                                            acc={acc}\r\n                                        />\r\n                                    </ButtonToolbar>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\nimport { SimpleCustForm } from './SimpleCustForm'\r\nimport { CustomerTable } from '../tables/CustomerTable'\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst CustomerForm = () => {\r\n    return (\r\n        <Container>\r\n            <SimpleCard title=\"Create Customer\">\r\n                <SimpleCustForm />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Current Customers\">\r\n                <CustomerTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CustomerForm\r\n","import {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ValidatorForm} from 'react-material-ui-form-validator'\r\n\r\nexport class SimpleVendForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/vendor/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                VendorId: null,\r\n                Name: event.target.Name.value,\r\n                Address: event.target.Address.value,\r\n                GST: event.target.GST.value,\r\n                Email: event.target.Email.value,\r\n                Pan: event.target.Pan.value,\r\n                Contact: event.target.Contact.value,\r\n                Bank:event.target.Bank.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        // const handleFileUpload = () => {}\r\n        return (\r\n            <div>\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <Grid container spacing={6}>\r\n                        <Grid item lg={6} md={4} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"Name\">\r\n                                <Form.Control\r\n                                    //  className=\" mb-2 p-2\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"Name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Address\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Address\"\r\n                                    name=\"Address\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"GST\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"GST\"\r\n                                    name=\"GST\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <FormControlLabel\r\n                                control={<Checkbox />}\r\n                                label=\"I have read and agree to the terms of service.\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"Email\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    name=\"Email\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId=\"Pan\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"PAN No.\"\r\n                                    name=\"Pan\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Contact\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Contact\"\r\n                                    name=\"Contact\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Bank\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Account Number\"\r\n                                    name=\"Banks\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                \r\n                    >\r\n                        <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Add Vendor\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nexport class EditVendor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/vendor/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                VendorId: event.target.VendorId.value,\r\n                Name: event.target.Name.value,\r\n                Address: event.target.Address.value,\r\n                GST: event.target.GST.value,\r\n                Email: event.target.Email.value,\r\n                Pan: event.target.Pan.value,\r\n                Contact: event.target.Contact.value,\r\n                Bank:event.target.Bank.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Button\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"VendorId\">\r\n                                        <Form.Label>Sr. No.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            required\r\n                                            defaultValue={this.props.Id}\r\n                                            placeholder=\"ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Name\"\r\n                                            required\r\n                                            defaultValue={this.props.name}\r\n                                            placeholder=\"Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Address\">\r\n                                        <Form.Label>Address</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Address\"\r\n                                            required\r\n                                            defaultValue={this.props.add}\r\n                                            placeholder=\"Address\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"GST\">\r\n                                        <Form.Label>GST</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"GST\"\r\n                                            required\r\n                                            defaultValue={this.props.gst}\r\n                                            placeholder=\"GST\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Email\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            name=\"Email\"\r\n                                            required\r\n                                            defaultValue={this.props.email}\r\n                                            placeholder=\"Email\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Pan\">\r\n                                        <Form.Label>Pan</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Pan\"\r\n                                            required\r\n                                            defaultValue={this.props.Pan}\r\n                                            placeholder=\"Pan\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Contact\">\r\n                                        <Form.Label>Contact</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Contact\"\r\n                                            required\r\n                                            defaultValue={this.props.contact}\r\n                                            placeholder=\"Contact\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Bank\">\r\n                                        <Form.Label>Bank</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Bank\"\r\n                                            required\r\n                                            defaultValue={this.props.acc}\r\n                                            placeholder=\"Bank\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Icon,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { EditVendor } from './EditVendor'\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"auto\",\r\n                // textOverflow: \"ellipsis\",\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nexport class VendorTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { deps: [], addStartShow: false, editStartShow: false }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(`${process.env.REACT_APP_API_URL}/vendor/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ deps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    deleteDep(VendorId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(`${process.env.REACT_APP_API_URL}/vendor/` + VendorId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            window.location.reload(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deps,\r\n            Id,\r\n            name,\r\n            add,\r\n            gst,\r\n            email,\r\n            Pan,\r\n            contact,\r\n            acc,\r\n        } = this.state\r\n        //    let addStartClose = () => this.setState({ addStartShow: false })\r\n        let editStartClose = () => this.setState({ editStartShow: false })\r\n\r\n        return (\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n                <StyledTable style={{tableLayout: \"fixed\", whiteSpace: \"pre\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{width: \"80px\"}}>VendorId</TableCell>\r\n                            <TableCell style={{width: \"12%\"}}>Name</TableCell>\r\n                            <TableCell style={{width: \"12%\"}}>Address</TableCell>\r\n                            <TableCell style={{width: \"120px\"}}>GST No.</TableCell>\r\n                            <TableCell style={{width: \"16%\"}}>Email</TableCell>\r\n                            <TableCell style={{width: \"110px\"}}>PAN</TableCell>\r\n                            <TableCell style={{width: \"92px\"}}>Contact No.</TableCell>\r\n                            <TableCell>Account No.</TableCell>\r\n                            <TableCell>Options</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {deps.map((dep) => (\r\n                            <TableRow key={dep.VendorId}>\r\n                                <TableCell>{dep.VendorId}</TableCell>\r\n                                <TableCell>{dep.Name}</TableCell>\r\n                                <TableCell>{dep.Address}</TableCell>\r\n                                <TableCell>{dep.GST}</TableCell>\r\n                                <TableCell>{dep.Email}</TableCell>\r\n                                <TableCell>{dep.Pan}</TableCell>\r\n                                <TableCell>{dep.Contact}</TableCell>\r\n                                <TableCell>{dep.Bank}</TableCell>\r\n                                <TableCell>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"info\"\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    editStartShow: true,\r\n                                                    Id: dep.VendorId,\r\n                                                    name: dep.Name,\r\n                                                    add: dep.Address,\r\n                                                    gst: dep.GST,\r\n                                                    email: dep.Email,\r\n                                                    Pan: dep.Pan,\r\n                                                    contact: dep.Contact,\r\n                                                    acc:dep.Bank,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Icon>edit</Icon>\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteDep(dep.VendorId)\r\n                                            }\r\n                                        >\r\n                                            <Icon>delete</Icon>\r\n                                        </Button>\r\n\r\n                                        <EditVendor\r\n                                            show={this.state.editStartShow}\r\n                                            onHide={editStartClose}\r\n                                            Id={Id}\r\n                                            name={name}\r\n                                            add={add}\r\n                                            gst={gst}\r\n                                            email={email}\r\n                                            Pan={Pan}\r\n                                            contact={contact}\r\n                                            acc={acc}\r\n                                        />\r\n                                    </ButtonToolbar>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { SimpleVendForm } from './SimpleVendForm'\r\nimport { VendorTable } from './../tables/VendorTable'\r\nimport { SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\n\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst VendorForm = () => {\r\n    return (\r\n        <Container>\r\n            <SimpleCard title=\"Create Vendor\">\r\n                <SimpleVendForm />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Current Vendors\">\r\n                <VendorTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default VendorForm\r\n","import {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ValidatorForm} from 'react-material-ui-form-validator'\r\n\r\nexport class Usersform extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/start/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                StartId: null,\r\n                fname: event.target.fname.value,\r\n                lname: event.target.lname.value,\r\n                business: event.target.business.value,\r\n                address: event.target.address.value,\r\n                state: event.target.state.value,\r\n                code: event.target.code.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        // const handleFileUpload = () => {}\r\n        return (\r\n            <div>\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <Grid container spacing={6}>\r\n                        <Grid item lg={6} md={4} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"fname\">\r\n                                <Form.Control\r\n                                    //  className=\" mb-2 p-2\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    name=\"Name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"lname\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    name=\"Name\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"business\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Bussiness\"\r\n                                    name=\"Name\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <FormControlLabel\r\n                                control={<Checkbox />}\r\n                                label=\"I have read and agree to the terms of service.\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"address\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Address\"\r\n                                    name=\"Name\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId=\"state\">\r\n                                <div className=\"  d-block d-flex flex-column\">\r\n                                    <select\r\n                                        class=\"form-select form-select-lg p-2\"\r\n                                        aria-label=\"form-select-lg example\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            marginBottom: '16px',\r\n                                            color: 'gray',\r\n                                        }}\r\n                                        name=\"state\"\r\n                                    >\r\n                                        <option value=\"AN\">\r\n                                            Andaman and Nicobar Islands\r\n                                        </option>\r\n                                        <option value=\"AP\">\r\n                                            Andhra Pradesh\r\n                                        </option>\r\n                                        <option value=\"AR\">\r\n                                            Arunachal Pradesh\r\n                                        </option>\r\n                                        <option value=\"AS\">Assam</option>\r\n                                        <option value=\"BR\">Bihar</option>\r\n                                        <option value=\"CH\">Chandigarh</option>\r\n                                        <option value=\"CT\">Chhattisgarh</option>\r\n                                        <option value=\"DN\">\r\n                                            Dadra and Nagar Haveli\r\n                                        </option>\r\n                                        <option value=\"DD\">\r\n                                            Daman and Diu\r\n                                        </option>\r\n                                        <option value=\"DL\" selected>\r\n                                            Delhi\r\n                                        </option>\r\n                                        <option value=\"GA\">Goa</option>\r\n                                        <option value=\"GJ\">Gujarat</option>\r\n                                        <option value=\"HR\">Haryana</option>\r\n                                        <option value=\"HP\">\r\n                                            Himachal Pradesh\r\n                                        </option>\r\n                                        <option value=\"JK\">\r\n                                            Jammu and Kashmir\r\n                                        </option>\r\n                                        <option value=\"JH\">Jharkhand</option>\r\n                                        <option value=\"KA\">Karnataka</option>\r\n                                        <option value=\"KL\">Kerala</option>\r\n                                        <option value=\"LA\">Ladakh</option>\r\n                                        <option value=\"LD\">Lakshadweep</option>\r\n                                        <option value=\"MP\">\r\n                                            Madhya Pradesh\r\n                                        </option>\r\n                                        <option value=\"MH\">Maharashtra</option>\r\n                                        <option value=\"MN\">Manipur</option>\r\n                                        <option value=\"ML\">Meghalaya</option>\r\n                                        <option value=\"MZ\">Mizoram</option>\r\n                                        <option value=\"NL\">Nagaland</option>\r\n                                        <option value=\"OR\">Odisha</option>\r\n                                        <option value=\"PY\">Puducherry</option>\r\n                                        <option value=\"PB\">Punjab</option>\r\n                                        <option value=\"RJ\">Rajasthan</option>\r\n                                        <option value=\"SK\">Sikkim</option>\r\n                                        <option value=\"TN\">Tamil Nadu</option>\r\n                                        <option value=\"TG\">Telangana</option>\r\n                                        <option value=\"TR\">Tripura</option>\r\n                                        <option value=\"UP\">\r\n                                            Uttar Pradesh\r\n                                        </option>\r\n                                        <option value=\"UT\">Uttarakhand</option>\r\n                                        <option value=\"WB\">West Bengal</option>\r\n                                    </select>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"code\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"State Code\"\r\n                                    name=\"Name\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                \r\n                    >\r\n                        <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Add Customer\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nexport class Editstart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/start/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                StartId: event.target.StartId.value,\r\n                fname: event.target.fname.value,\r\n                lname: event.target.lname.value,\r\n                business: event.target.business.value,\r\n                address: event.target.address.value,\r\n                state: event.target.state.value,\r\n                code: event.target.code.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n               \r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Button\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit} >\r\n                                <Form.Group controlId=\"StartId\" >\r\n                                        <Form.Label ><b>Sr. No.</b></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            \r\n                                            required\r\n                                            defaultValue={this.props.id}\r\n                                            placeholder=\"ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"fname\"  >\r\n                                        <Form.Label ><b>First Name</b></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"fame\"\r\n                                            required\r\n                                            defaultValue={this.props.stfname}\r\n                                            placeholder=\"First Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"lname\">\r\n                                        <Form.Label><b>Last Name</b></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"lname\"\r\n                                            required\r\n                                            defaultValue={this.props.stlname}\r\n                                            placeholder=\"Last Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"business\">\r\n                                        <Form.Label><b>Business</b></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"business\"\r\n                                            required\r\n                                            defaultValue={this.props.stbusiness}\r\n                                            placeholder=\"Business\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"address\">\r\n                                        <Form.Label><b>Address</b></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"address\"\r\n                                            required\r\n                                            defaultValue={this.props.staddress}\r\n                                            placeholder=\"Address\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"state\">\r\n                                        <Form.Label><b>State</b></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"state\"\r\n                                            required\r\n                                            defaultValue={this.props.ststate}\r\n                                            placeholder=\"State\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"code\">\r\n                                        <Form.Label><b>State Code</b></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"code\"\r\n                                            required\r\n                                            defaultValue={this.props.stcode}\r\n                                            placeholder=\"State Code\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\" style={{marginTop: \"10px\", width: \"100px\"}}>\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Icon,\r\n    TablePagination,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { Editstart } from './Editstart'\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nexport class Usertable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            deps: [],\r\n            addStartShow: false,\r\n            editStartShow: false,\r\n            rowsPerPage: 5,\r\n            page: 0,\r\n        }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/start/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ deps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    deleteDep(StartId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(`${process.env.REACT_APP_API_URL}/api/start/` + StartId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            window.location.reload(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deps,\r\n            id,\r\n            stfname,\r\n            stlname,\r\n            stbusiness,\r\n            staddress,\r\n            ststate,\r\n            stcode,\r\n        } = this.state\r\n\r\n        const handleChangePage = (event, newPage) => {\r\n            this.setPage(newPage)\r\n        }\r\n\r\n        const handleChangeRowsPerPage = (event) => {\r\n            this.setRowsPerPage(+event.target.value)\r\n            this.setPage(0)\r\n        }\r\n        //    let addStartClose = () => this.setState({ addStartShow: false })\r\n        let editStartClose = () => this.setState({ editStartShow: false })\r\n\r\n        return (\r\n            <>\r\n                <Box width=\"100%\" overflow=\"auto\">\r\n                    <StyledTable>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Id</TableCell>\r\n                                <TableCell>First Name</TableCell>\r\n                                <TableCell>Last Name</TableCell>\r\n                                <TableCell>Bussiness</TableCell>\r\n                                <TableCell>Address</TableCell>\r\n                                <TableCell>State</TableCell>\r\n                                <TableCell>State Code</TableCell>\r\n                                <TableCell>Options</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {deps.map((dep) => (\r\n                                <TableRow key={dep.StartId}>\r\n                                    <TableCell>{dep.StartId}</TableCell>\r\n                                    <TableCell>{dep.fname}</TableCell>\r\n                                    <TableCell>{dep.lname}</TableCell>\r\n                                    <TableCell>{dep.business}</TableCell>\r\n                                    <TableCell>{dep.address}</TableCell>\r\n                                    <TableCell>{dep.state}</TableCell>\r\n                                    <TableCell>{dep.code}</TableCell>\r\n                                    <TableCell>\r\n                                        <ButtonToolbar>\r\n                                            <Button\r\n                                                className=\"mr-2\"\r\n                                                variant=\"info\"\r\n                                                onClick={() =>\r\n                                                    this.setState({\r\n                                                        editStartShow: true,\r\n                                                        id: dep.StartId,\r\n                                                        stfname: dep.fname,\r\n                                                        stlname: dep.lname,\r\n                                                        stbusiness:\r\n                                                            dep.business,\r\n                                                        staddress: dep.address,\r\n                                                        ststate: dep.state,\r\n                                                        stcode: dep.code,\r\n                                                    })\r\n                                                }\r\n                                            >\r\n                                                <Icon>edit</Icon>\r\n                                            </Button>\r\n\r\n                                            <Button\r\n                                                className=\"mr-2\"\r\n                                                variant=\"danger\"\r\n                                                onClick={() =>\r\n                                                    this.deleteDep(dep.StartId)\r\n                                                }\r\n                                            >\r\n                                                <Icon>delete</Icon>\r\n                                            </Button>\r\n\r\n                                            <Editstart\r\n                                                show={this.state.editStartShow}\r\n                                                onHide={editStartClose}\r\n                                                id={id}\r\n                                                stfname={stfname}\r\n                                                stlname={stlname}\r\n                                                stbusiness={stbusiness}\r\n                                                staddress={staddress}\r\n                                                ststate={ststate}\r\n                                                stcode={stcode}\r\n                                            />\r\n                                        </ButtonToolbar>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </StyledTable>\r\n                </Box>\r\n                <TablePagination\r\n                    sx={{ px: 2 }}\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={deps.length}\r\n                    rowsPerPage={this.rowsPerPage}\r\n                    style={{display: 'none'}}\r\n                    page={this.page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\nimport { Usersform } from './Usersform'\r\nimport { Usertable } from '../tables/Usertable'\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst Addstart = () => {\r\n    return (\r\n        <Container>\r\n            <SimpleCard title=\"Create User\">\r\n                <Usersform />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Current Users\">\r\n                <Usertable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Addstart\r\n","import {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ValidatorForm} from 'react-material-ui-form-validator'\r\n\r\nexport class SimpleEstiForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/estimate/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                EstimateId: null,\r\n                EstimateNo: event.target.EstimateNo.value,\r\n                Create: event.target.Create.value,\r\n                Update: event.target.Update.value,\r\n                Item: event.target.Item.value,\r\n                Price: event.target.Price.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        // const handleFileUpload = () => {}\r\n        return (\r\n            <div>\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <Grid container spacing={6}>\r\n                        <Grid item lg={6} md={4} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"EstimateNo\">\r\n                                <Form.Control\r\n                                    //  className=\" mb-2 p-2\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"EstimateNo\"\r\n                                    name=\"Name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Create\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Create\"\r\n                                    name=\"Create\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Update\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Update\"\r\n                                    name=\"Update\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <FormControlLabel\r\n                                control={<Checkbox />}\r\n                                label=\"I have read and agree to the terms of service.\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"Item\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Item\"\r\n                                    name=\"Item\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId=\"Price\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Price\"\r\n                                    name=\"Price\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                \r\n                    >\r\n                        <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Add Estimate\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nexport class EditEstimate extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/estimate/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                EstimateId: event.target.EstimateId.value,\r\n                EstimateNo: event.target.EstimateNo.value,\r\n                Create: event.target.Create.value,\r\n                Update: event.target.Update.value,\r\n                Item: event.target.Item.value,\r\n                Price: event.target.Price.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Button\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"EstimateId\">\r\n                                        <Form.Label>Sr. No.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            required\r\n                                            defaultValue={this.props.Id}\r\n                                            placeholder=\"ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"EstimateNo\">\r\n                                        <Form.Label>EstimateNo</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"EstimateNo\"\r\n                                            required\r\n                                            defaultValue={this.props.no}\r\n                                            placeholder=\"EstimateNo\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Create\">\r\n                                        <Form.Label>Create</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"create\"\r\n                                            required\r\n                                            defaultValue={this.props.create}\r\n                                            placeholder=\"Create\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Update\">\r\n                                        <Form.Label>Update</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Update\"\r\n                                            required\r\n                                            defaultValue={this.props.update}\r\n                                            placeholder=\"Update\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Item\">\r\n                                        <Form.Label>Item</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Item\"\r\n                                            required\r\n                                            defaultValue={this.props.item}\r\n                                            placeholder=\"Item\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Price\">\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Price\"\r\n                                            required\r\n                                            defaultValue={this.props.price}\r\n                                            placeholder=\"Price\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: '10px' }}>\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Icon,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { EditEstimate } from './EditEstimate'\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"auto\",\r\n                // textOverflow: \"ellipsis\",\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nexport class EstimateTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { deps: [], addStartShow: false, editStartShow: false }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(`${process.env.REACT_APP_API_URL}/estimate/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ deps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    deleteDep(EstimateId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(`${process.env.REACT_APP_API_URL}/estimate/` + EstimateId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            window.location.reload(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deps,\r\n            Id,\r\n            no,\r\n            create,\r\n            update,\r\n            item,\r\n            price,\r\n        } = this.state\r\n        //    let addStartClose = () => this.setState({ addStartShow: false })\r\n        let editStartClose = () => this.setState({ editStartShow: false })\r\n\r\n        return (\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n                <StyledTable style={{tableLayout: \"fixed\", whiteSpace: \"pre\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{width: \"80px\"}}>EstimateId</TableCell>\r\n                            <TableCell style={{width: \"12%\"}}>EstimateNo</TableCell>\r\n                            <TableCell style={{width: \"12%\"}}>Create</TableCell>\r\n                            <TableCell style={{width: \"120px\"}}>Update</TableCell>\r\n                            <TableCell style={{width: \"16%\"}}>Item</TableCell>\r\n                            <TableCell style={{width: \"110px\"}}>Price</TableCell>\r\n                            <TableCell>Options</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {deps.map((dep) => (\r\n                            <TableRow key={dep.EstimateId}>\r\n                                <TableCell>{dep.EstimateId}</TableCell>\r\n                                <TableCell>{dep.EstimateNo}</TableCell>\r\n                                <TableCell>{dep.Create}</TableCell>\r\n                                <TableCell>{dep.Update}</TableCell>\r\n                                <TableCell>{dep.Item}</TableCell>\r\n                                <TableCell>{dep.Price}</TableCell>\r\n                                <TableCell>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"info\"\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    editStartShow: true,\r\n                                                    Id: dep.EstimateId,\r\n                                                    no: dep.EstimateNo,\r\n                                                    create: dep.Create,\r\n                                                    update: dep.Update,\r\n                                                    item: dep.Item,\r\n                                                    price: dep.Price,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Icon>edit</Icon>\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteDep(dep.EstimateId)\r\n                                            }\r\n                                        >\r\n                                            <Icon>delete</Icon>\r\n                                        </Button>\r\n\r\n                                        <EditEstimate\r\n                                            show={this.state.editStartShow}\r\n                                            onHide={editStartClose}\r\n                                            Id={Id}\r\n                                            no={no}\r\n                                            create={create}\r\n                                            update={update}\r\n                                            item={item}\r\n                                            price={price}\r\n                                        />\r\n                                    </ButtonToolbar>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\nimport { SimpleEstiForm } from './SimpleEstiForm'\r\nimport { EstimateTable } from '../tables/EstimateTable'\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst CustomerForm = () => {\r\n    return (\r\n        <Container>\r\n            <SimpleCard title=\"Create Estimate\">\r\n                <SimpleEstiForm />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Current Estimates\">\r\n                <EstimateTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CustomerForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Button, Icon } from '@mui/material'\r\nimport { Form } from 'react-bootstrap'\r\nimport { Span } from 'app/components/Typography'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n\r\nexport class AutocompleteCombo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/expense/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                ExpenseId: null,\r\n                Category: event.target.Category.value,\r\n                Amount: event.target.Amount.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // alert(result)\r\n                    window.location='/expenses/'\r\n                    \r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <Form.Group controlId=\"Category\">\r\n                        <Form.Control\r\n                            style={{\r\n                                width: '40%',\r\n                                marginBottom: '16px',\r\n                            }}\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Category\"\r\n                            name=\"Category\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"Amount\">\r\n                        <Form.Control\r\n                            style={{\r\n                                width: '40%',\r\n                                marginBottom: '16px',\r\n                            }}\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Amount\"\r\n                            name=\"Amount\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                        <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Add Expense\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nexport class EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/expense/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                ExpenseId: event.target.ExpenseId.value,\r\n                Category: event.target.Category.value,\r\n                Amount: event.target.Amount.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Button\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"ExpenseId\">\r\n                                        <Form.Label>Sr. No.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            required\r\n                                            defaultValue={this.props.Id}\r\n                                            placeholder=\"ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Category\">\r\n                                        <Form.Label>Category</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"category\"\r\n                                            required\r\n                                            defaultValue={this.props.cate}\r\n                                            placeholder=\"Category\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Amount\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Amount\"\r\n                                            required\r\n                                            defaultValue={this.props.amount}\r\n                                            placeholder=\"Amount\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\" style={{ marginTop: '10px' }}>\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    Icon,\r\n} from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { EditExpense } from './EditExpense'\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n    whiteSpace: 'pre',\r\n    '& thead': {\r\n        '& tr': {\r\n            '& th': {\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n            },\r\n        },\r\n    },\r\n    '& tbody': {\r\n        '& tr': {\r\n            '& td': {\r\n                paddingLeft: 0,\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"auto\",\r\n                // textOverflow: \"ellipsis\",\r\n                textTransform: 'capitalize',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nexport class ExpenseTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { deps: [], addStartShow: false, editStartShow: false }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(`${process.env.REACT_APP_API_URL}/expense/`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({ deps: data })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    deleteDep(ExpenseId) {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(`${process.env.REACT_APP_API_URL}/expense/` + ExpenseId, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            window.location.reload(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deps,\r\n            Id,\r\n            cate,\r\n            amount,\r\n        } = this.state\r\n        //    let addStartClose = () => this.setState({ addStartShow: false })\r\n        let editStartClose = () => this.setState({ editStartShow: false })\r\n\r\n        return (\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n                <StyledTable style={{tableLayout: \"fixed\", whiteSpace: \"pre\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{width: \"150px\"}}>ExpenseId</TableCell>\r\n                            <TableCell style={{width: \"25%\"}}>Category</TableCell>\r\n                            <TableCell style={{width: \"25%\"}}>Amount</TableCell>\r\n                            <TableCell>Options</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {deps.map((dep) => (\r\n                            <TableRow key={dep.ExpenseId}>\r\n                                <TableCell>{dep.ExpenseId}</TableCell>\r\n                                <TableCell>{dep.Category}</TableCell>\r\n                                <TableCell>{dep.Amount}</TableCell>\r\n                                <TableCell>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"info\"\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    editStartShow: true,\r\n                                                    Id: dep.ExpenseId,\r\n                                                    cate: dep.Category,\r\n                                                    amount: dep.Amount,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Icon>edit</Icon>\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            className=\"mr-2\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                this.deleteDep(dep.ExpenseId)\r\n                                            }\r\n                                        >\r\n                                            <Icon>delete</Icon>\r\n                                        </Button>\r\n\r\n                                        <EditExpense\r\n                                            show={this.state.editStartShow}\r\n                                            onHide={editStartClose}\r\n                                            Id={Id}\r\n                                            cate={cate}\r\n                                            amount={amount}\r\n                                        />\r\n                                    </ButtonToolbar>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { SimpleCard } from 'app/components'\r\nimport { AutocompleteCombo } from './AutocompleteCombo'\r\nimport { ExpenseTable } from '../tables/ExpenseTable'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppAutoComplete = () => {\r\n    return (\r\n        <Container>\r\n            <SimpleCard title=\"Expenses\">\r\n                <AutocompleteCombo />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Expense Table\">\r\n                <ExpenseTable />\r\n            </SimpleCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppAutoComplete\r\n","import {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ValidatorForm} from 'react-material-ui-form-validator'\r\n\r\nexport class InvoicesForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/invoice/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                InvoiceId: null,\r\n                Name: event.target.Name.value,\r\n                Invoice_no: event.target.Invoice_no.value,\r\n                Invoice_Date: event.target.Invoice_Date.value,\r\n                Payment_Date: event.target.Payment_Date.value,\r\n                Amount: event.target.Amount.value,\r\n              \r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        // const handleFileUpload = () => {}\r\n        return (\r\n            <div>\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <Grid container spacing={6}>\r\n                        <Grid item lg={6} md={4} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"Name\">\r\n                                <Form.Control\r\n                                    //  className=\" mb-2 p-2\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"Name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Invoice_no\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"InvoiceNo\"\r\n                                    name=\"InvoiceNo\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"Invoice_Date\">\r\n                            <Form.Label>Invoice Date</Form.Label>\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"date\"\r\n                                    placeholder=\"InvoiceDate\"\r\n                                    name=\"InvoiceDate\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            <FormControlLabel\r\n                                control={<Checkbox />}\r\n                                label=\"I have read and agree to the terms of service.\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <Form.Group controlId=\"Payment_Date\">\r\n                            <Form.Label>Payment Date</Form.Label>\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"date\"\r\n                                    placeholder=\"Payment Date\"\r\n                                    name=\"Payment\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId=\"Amount\">\r\n                                <Form.Control\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        marginBottom: '16px',\r\n                                    }}\r\n                                    size=\"lg\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Amount\"\r\n                                    name=\"Amount\"\r\n                                />\r\n                                \r\n                            </Form.Group>\r\n                          \r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                \r\n                    >\r\n                        <Icon>add</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Add Customer\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n// import StepperForm from './StepperForm'\r\nimport { PaginationTable } from './../tables/PaginationTable'\r\nimport { SimpleCard } from 'app/components'\r\nimport { Box, styled } from '@mui/system'\r\nimport { InvoicesForm } from './InvoicesForm'\r\n// import { Button, Icon } from '@mui/material'\r\n// import { Span } from 'app/components/Typography'\r\n// import { Link } from 'react-router-dom-old'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n    '& .breadcrumb': {\r\n        marginBottom: '30px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '16px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst AppForm = () => {\r\n    return (\r\n        <Container>\r\n\r\n           <SimpleCard title=\"Create Invoice\">\r\n              <InvoicesForm />\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            <SimpleCard title=\"Current Invoices\">\r\n            <PaginationTable />\r\n            </SimpleCard> \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppForm\r\n","import React from 'react'\r\nimport { styled, useTheme } from '@mui/system'\r\nimport { Icon, Breadcrumbs, Hidden } from '@mui/material'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst BreadcrumbRoot = styled('div')(() => ({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst BreadcrumbName = styled('h4')(() => ({\r\n    margin: 0,\r\n    fontSize: '16px',\r\n    paddingBottom: '1px',\r\n    verticalAlign: 'middle',\r\n    textTransform: 'capitalize',\r\n}))\r\n\r\nconst SubName = styled('span')(({ theme }) => ({\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst Separator = styled('h4')(({ theme }) => ({\r\n    margin: 0,\r\n    marginLeft: 8,\r\n    paddingBottom: '3px',\r\n    color: theme.palette.text.hint\r\n}))\r\n\r\nconst StyledIcon = styled(Icon)(() => ({\r\n    marginLeft: 8,\r\n    marginBottom: '4px',\r\n    verticalAlign: 'middle',\r\n}))\r\n\r\nconst Breadcrumb = ({ routeSegments }) => {\r\n    const theme = useTheme()\r\n    const hint = theme.palette.text.hint\r\n\r\n    return (\r\n        <BreadcrumbRoot>\r\n            {routeSegments ? (\r\n                <Hidden xsDown>\r\n                    <BreadcrumbName>\r\n                        {routeSegments[routeSegments.length - 1]['name']}\r\n                    </BreadcrumbName>\r\n                    <Separator>|</Separator>\r\n                </Hidden>\r\n            ) : null}\r\n            <Breadcrumbs\r\n                separator={<Icon sx={{ color: hint }}>navigate_next</Icon>}\r\n                sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    position: 'relative'\r\n                }}\r\n            >\r\n                <NavLink to=\"/\">\r\n                    <StyledIcon color=\"primary\">\r\n                        home\r\n                    </StyledIcon>\r\n                </NavLink>\r\n                {routeSegments\r\n                    ? routeSegments.map((route, index) => {\r\n                        return index !== routeSegments.length - 1 ? (\r\n                            <NavLink key={index} to={route.path}>\r\n                                <SubName>\r\n                                    {route.name}\r\n                                </SubName>\r\n                            </NavLink>\r\n                        ) : (\r\n                            <SubName key={index}>\r\n                                {route.name}\r\n                            </SubName>\r\n                        )\r\n                    })\r\n                    : null}\r\n            </Breadcrumbs>\r\n        </BreadcrumbRoot>\r\n    )\r\n}\r\n\r\nexport default Breadcrumb\r\n","import React from 'react'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst DividerRoot = styled(Box)(({ theme }) => ({\r\n    // borderBottom: `1px solid ${palette.divider}`,\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n    height: 16,\r\n    '&::after': {\r\n        position: 'absolute',\r\n        content: '\"\"',\r\n        top: '10px',\r\n        left: 0,\r\n        width: '100%',\r\n        height: '1px',\r\n        backgroundColor: theme.palette.divider,\r\n        zIndex: 1,\r\n    },\r\n    '& span': {\r\n        position: 'relative',\r\n        background: '#fff',\r\n        padding: '4px 6px',\r\n        color: theme.palette.text.secondary,\r\n        zIndex: 5,\r\n    },\r\n}))\r\n\r\nconst MatxDivider = ({ text, sx }) => {\r\n    return (\r\n        <div>\r\n            <DividerRoot sx={sx}>{text && <span>{text}</span>}</DividerRoot>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatxDivider\r\n","import React, { Fragment } from 'react'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { styled, Box } from '@mui/system'\r\nimport { Menu, ThemeProvider } from '@mui/material'\r\n\r\nconst MenuButton = styled(Box)(({ theme }) => ({\r\n    display: 'inline-block',\r\n    color: theme.palette.text.primary,\r\n    '& div:hover': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n}))\r\n\r\nconst MatxMenu = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const children = React.Children.toArray(props.children)\r\n    let { shouldCloseOnItemClick = true, horizontalPosition = 'left' } = props\r\n    const { settings } = useSettings()\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MenuButton onClick={handleClick}>\r\n                {props.menuButton}\r\n            </MenuButton>\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Menu\r\n                    elevation={8}\r\n                    getContentAnchorEl={null}\r\n                    anchorEl={anchorEl}\r\n                    open={!!anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: horizontalPosition,\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: horizontalPosition,\r\n                    }}\r\n                >\r\n                    {children.map((child, index) => (\r\n                        <div\r\n                            onClick={\r\n                                shouldCloseOnItemClick ? handleClose : () => { }\r\n                            }\r\n                            key={index}\r\n                        >\r\n                            {child}\r\n                        </div>\r\n                    ))}\r\n                </Menu>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MatxMenu\r\n","import { styled } from '@mui/system'\r\nimport React, { useState } from 'react'\r\nimport { Icon, IconButton, Hidden } from '@mui/material'\r\n\r\nconst ToolbarMenu = styled('div')(({ theme }) => ({\r\n    '&.open $menuContainer': {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n}))\r\n\r\nconst MenuContainer = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n        position: 'absolute',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        width: '100%',\r\n        padding: '4px 8px',\r\n        display: 'none',\r\n    }\r\n}))\r\n\r\nconst MatxToolbarMenu = ({ offsetTop, children }) => {\r\n    const [open, setOpen] = useState(false)\r\n    const handleToggle = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <ToolbarMenu className={open}>\r\n            <Hidden mdUp>\r\n                <IconButton onClick={handleToggle}>\r\n                    <Icon>{open ? 'close' : 'more_vert'}</Icon>\r\n                </IconButton>\r\n            </Hidden>\r\n\r\n            <MenuContainer sx={{ top: offsetTop, left: 0 }}>\r\n                {children}\r\n            </MenuContainer>\r\n        </ToolbarMenu>\r\n    )\r\n}\r\n\r\nexport default MatxToolbarMenu\r\n","import React, { Suspense } from 'react'\r\nimport { MatxLoading } from 'app/components'\r\n\r\nconst MatxSuspense = ({ children }) => {\r\n    return <Suspense fallback={<MatxLoading />}>{children}</Suspense>\r\n}\r\n\r\nexport default MatxSuspense\r\n","import React, { useState } from 'react'\r\nimport { styled, useTheme } from '@mui/system'\r\nimport { Icon, IconButton } from '@mui/material'\r\nimport { topBarHeight } from 'app/utils/constant'\r\n\r\nconst SearchContainer = styled('div')(({ theme }) => ({\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 9,\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: topBarHeight,\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.text.primary,\r\n    '&::placeholder': {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}))\r\n\r\nconst SearchInput = styled('input')(({ theme }) => ({\r\n    width: '100%',\r\n    border: 'none',\r\n    outline: 'none',\r\n    fontSize: '1rem',\r\n    paddingLeft: '20px',\r\n    height: 'calc(100% - 5px)',\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.text.primary,\r\n    '&::placeholder': {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}))\r\n\r\nconst MatxSearchBox = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const toggle = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textColor = palette.text.primary\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!open && (\r\n                <IconButton onClick={toggle}>\r\n                    <Icon sx={{ color: textColor }}>search</Icon>\r\n                </IconButton>\r\n            )}\r\n\r\n            {open && (\r\n                <SearchContainer>\r\n                    <SearchInput\r\n                        type=\"text\"\r\n                        placeholder=\"Search here...\"\r\n                        autoFocus\r\n                    />\r\n                    <IconButton\r\n                        onClick={toggle}\r\n                        sx={{ mx: 2, verticalAlign: 'middle' }}\r\n                    >\r\n                        <Icon sx={{ color: textColor }}>close</Icon>\r\n                    </IconButton>\r\n                </SearchContainer>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MatxSearchBox\r\n","import clsx from 'clsx'\r\nimport { useEffect } from 'react'\r\nimport { styled, Box } from '@mui/system'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Icon, ButtonBase } from '@mui/material'\r\nimport React, { useState, useRef, useCallback } from 'react'\r\n\r\nconst NavExpandRoot = styled('div')(({ theme }) => ({\r\n    '& .expandIcon': {\r\n        transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .collapseIcon': {\r\n        transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n        transform: 'rotate(0deg)',\r\n    },\r\n    '& .expansion-panel': {\r\n        overflow: 'hidden',\r\n        transition: 'max-height 0.3s cubic-bezier(0, 0, 0.2, 1)',\r\n    },\r\n    '& .highlight': {\r\n        background: theme.palette.primary.main,\r\n    },\r\n    '&.compactNavItem': {\r\n        width: 44,\r\n        overflow: 'hidden',\r\n        justifyContent: 'center !important',\r\n        '& .itemText': {\r\n            display: 'none',\r\n        },\r\n        '& .itemIcon': {\r\n            display: 'none',\r\n        },\r\n    },\r\n}))\r\n\r\nconst BaseButton = styled(ButtonBase)(({ theme }) => ({\r\n    height: 44,\r\n    width: '100%',\r\n    whiteSpace: 'pre',\r\n    overflow: 'hidden',\r\n    paddingRight: '16px',\r\n    borderRadius: '4px',\r\n    marginBottom: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between !important',\r\n    color: theme.palette.text.primary,\r\n    '&:hover': {\r\n        background: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    '& .icon': {\r\n        width: 36,\r\n        fontSize: '18px',\r\n        paddingLeft: '16px',\r\n        paddingRight: '16px',\r\n        verticalAlign: 'middle',\r\n    },\r\n}))\r\n\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n    width: 4,\r\n    height: 4,\r\n    color: 'inherit',\r\n    overflow: 'hidden',\r\n    marginLeft: '20px',\r\n    marginRight: '8px',\r\n    borderRadius: '300px !important',\r\n    // background: theme.palette.primary.contrastText,\r\n    background: theme.palette.text.primary,\r\n}))\r\n\r\nconst ItemText = styled('span')(() => ({\r\n    fontSize: '0.875rem',\r\n    paddingLeft: '0.8rem',\r\n    verticalAlign: 'middle',\r\n}))\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n    padding: '1px 4px',\r\n    overflow: 'hidden',\r\n    borderRadius: '300px',\r\n}))\r\n\r\nconst MatxVerticalNavExpansionPanel = ({ item, children, mode }) => {\r\n    const [collapsed, setCollapsed] = useState(true)\r\n    const elementRef = useRef(null)\r\n    const componentHeight = useRef(0)\r\n    const { pathname } = useLocation()\r\n    const { name, icon, iconText, badge } = item\r\n\r\n    const handleClick = () => {\r\n        componentHeight.current = 0\r\n        calcaulateHeight(elementRef.current)\r\n        setCollapsed(!collapsed)\r\n    }\r\n\r\n    const calcaulateHeight = useCallback((node) => {\r\n        if (node.name !== 'child') {\r\n            for (let child of node.children) {\r\n                calcaulateHeight(child)\r\n            }\r\n        }\r\n\r\n        if (node.name === 'child') componentHeight.current += node.scrollHeight\r\n        else componentHeight.current += 44 //here 44 is node height\r\n        return\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!elementRef) return\r\n\r\n        calcaulateHeight(elementRef.current)\r\n\r\n        // OPEN DROPDOWN IF CHILD IS ACTIVE\r\n        for (let child of elementRef.current.children) {\r\n            if (child.getAttribute('href') === pathname) {\r\n                setCollapsed(false)\r\n            }\r\n        }\r\n    }, [pathname, calcaulateHeight])\r\n\r\n    return (\r\n        <NavExpandRoot>\r\n            <BaseButton\r\n                className={clsx({\r\n                    'has-submenu compactNavItem': true,\r\n                    compactNavItem: mode === 'compact',\r\n                    open: !collapsed,\r\n                })}\r\n                onClick={handleClick}\r\n            >\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    {icon && <Icon className=\"icon\">{icon}</Icon>}\r\n                    {iconText && <BulletIcon />}\r\n                    <ItemText className=\"sidenavHoverShow\">{name}</ItemText>\r\n                </Box>\r\n                {badge && (\r\n                    <BadgeValue className=\"sidenavHoverShow itemIcon\">\r\n                        {badge.value}\r\n                    </BadgeValue>\r\n                )}\r\n                <div\r\n                    className={clsx({\r\n                        sidenavHoverShow: true,\r\n                        collapseIcon: collapsed,\r\n                        expandIcon: !collapsed,\r\n                    })}\r\n                >\r\n                    <Icon fontSize=\"small\" sx={{ verticalAlign: 'middle' }}>\r\n                        chevron_right\r\n                    </Icon>\r\n                </div>\r\n            </BaseButton>\r\n\r\n            <div\r\n                ref={elementRef}\r\n                className=\"expansion-panel submenu\"\r\n                style={\r\n                    collapsed\r\n                        ? { maxHeight: '0px' }\r\n                        : { maxHeight: componentHeight.current + 'px' }\r\n                }\r\n            >\r\n                {children}\r\n            </div>\r\n        </NavExpandRoot>\r\n    )\r\n}\r\n\r\nexport default MatxVerticalNavExpansionPanel\r\n","import { styled, Box } from '@mui/system'\r\nimport React, { Fragment } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Paragraph, Span } from '../Typography'\r\nimport { Icon, ButtonBase } from '@mui/material'\r\nimport MatxVerticalNavExpansionPanel from './MatxVerticalNavExpansionPanel'\r\nimport ArrowRight from '@mui/icons-material/ArrowRight'\r\n\r\nconst ListLabel = styled(Paragraph)(({ theme, mode }) => ({\r\n    fontSize: '12px',\r\n    marginTop: '20px',\r\n    marginLeft: '15px',\r\n    marginBottom: '10px',\r\n    textTransform: 'uppercase',\r\n    textDecoration: 'none',\r\n    display: mode === 'compact' && 'none',\r\n    color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst ExtAndIntCommon = {\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    borderRadius: '4px',\r\n    height: 44,\r\n    whiteSpace: 'pre',\r\n    marginBottom: '8px',\r\n    textDecoration: 'none',\r\n    justifyContent: 'space-between',\r\n    transition: 'all 150ms ease-in',\r\n    '&:hover': {\r\n        background: 'rgba(255, 255, 255, 0.08)',\r\n        textDecoration: 'none',\r\n    },\r\n    '&.compactNavItem': {\r\n        overflow: 'hidden',\r\n        textDecoration: 'none',\r\n        justifyContent: 'center !important',\r\n    },\r\n    '& .icon': {\r\n        fontSize: '18px',\r\n        paddingLeft: '16px',\r\n        paddingRight: '16px',\r\n        verticalAlign: 'middle',\r\n    },\r\n}\r\nconst ExternalLink = styled('a')(({ theme }) => ({\r\n    ...ExtAndIntCommon,\r\n    color: theme.palette.text.secondary,\r\n    textDecoration: 'none',\r\n\r\n}))\r\n\r\nconst InternalLink = styled(Box)(({ theme }) => ({\r\n    '& a': {\r\n        ...ExtAndIntCommon,\r\n        color: theme.palette.text.primary,\r\n        textDecoration: 'none',\r\n    },\r\n\r\n    '& .navItemActive': {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.16)',\r\n    },\r\n}))\r\n\r\nconst StyledText = styled(Span)(({ mode }) => ({\r\n    fontSize: '0.875rem',\r\n    paddingLeft: '0.8rem',\r\n    display: mode === 'compact' && 'none',\r\n    textDecoration: 'none',\r\n}))\r\n\r\n// const BulletIcon = styled('div')(({ theme }) => ({\r\n//\r\n// }))\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n    padding: '1px 8px',\r\n    overflow: 'hidden',\r\n    borderRadius: '300px',\r\n    textDecoration: 'none',\r\n}))\r\n\r\nconst MatxVerticalNav = ({ items }) => {\r\n    const { settings } = useSettings()\r\n    const { mode } = settings.layout1Settings.leftSidebar\r\n\r\n    const renderLevels = (data) => {\r\n        return data.map((item, index) => {\r\n            if (item.type === 'label')\r\n                return (\r\n                    <ListLabel\r\n                        key={index}\r\n                        mode={mode}\r\n                        className=\"sidenavHoverShow\"\r\n                    >\r\n                        {item.label}\r\n                    </ListLabel>\r\n                )\r\n            if (item.children) {\r\n                return (\r\n                    <MatxVerticalNavExpansionPanel\r\n                        mode={mode}\r\n                        item={item}\r\n                        key={index}\r\n                    >\r\n                        {renderLevels(item.children)}\r\n                    </MatxVerticalNavExpansionPanel>\r\n                )\r\n            } else if (item.type === 'extLink') {\r\n                return (\r\n                    <ExternalLink\r\n                        key={index}\r\n                        href={item.path}\r\n                        className={`${mode === 'compact' && 'compactNavItem'}`}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        <ButtonBase\r\n                            key={item.name}\r\n                            name=\"child\"\r\n                            sx={{ width: '100%' }}\r\n                        >\r\n                            {(() => {\r\n                                if (item.icon) {\r\n                                    return (\r\n                                        <Icon className=\"icon\">\r\n                                            {item.icon}\r\n                                        </Icon>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <span className=\"item-icon icon-text text-decoration-none\">\r\n                                            {item.iconText}\r\n                                        </span>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                            <StyledText\r\n                                mode={mode}\r\n                                className=\"sidenavHoverShow\"\r\n                            >\r\n                                {item.name}\r\n                            </StyledText>\r\n                            <Box mx=\"auto\"></Box>\r\n                            {item.badge && (\r\n                                <BadgeValue>{item.badge.value}</BadgeValue>\r\n                            )}\r\n                        </ButtonBase>\r\n                    </ExternalLink>\r\n                )\r\n            } else {\r\n                return (\r\n                    <InternalLink key={index}>\r\n                        <NavLink\r\n                            to={item.path}\r\n                            className={({ isActive }) =>\r\n                                isActive\r\n                                    ? `navItemActive ${\r\n                                          mode === 'compact' && 'compactNavItem'\r\n                                      }`\r\n                                    : `${\r\n                                          mode === 'compact' && 'compactNavItem'\r\n                                      }`\r\n                            }\r\n                        >\r\n                            <ButtonBase\r\n                                key={item.name}\r\n                                name=\"child\"\r\n                                sx={{ width: '100%' }}\r\n                            >\r\n                                {item?.icon ? (\r\n                                    <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                        {item.icon}\r\n                                    </Icon>\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        <ArrowRight\r\n                                            style={{\r\n                                                padding: '2px',\r\n                                                marginLeft: '44px',\r\n                                                marginRight: '8px',\r\n                                                overflow: 'hidden',\r\n                                                borderRadius: '300px',\r\n                                            }}\r\n                                            // className={`nav-edit`}\r\n                                            // sx={{\r\n                                            //     display:\r\n                                            //         mode === 'compact' && 'none',\r\n                                            // }}\r\n                                        />\r\n                                        <Box\r\n                                            // className=\"nav-bullet-text\"\r\n                                            sx={{\r\n                                                ml: '20px',\r\n                                                fontSize: '11px',\r\n                                                display:\r\n                                                    mode !== 'compact' &&\r\n                                                    'none',\r\n                                            }}\r\n                                        >\r\n                                            {item.iconText}\r\n                                        </Box>\r\n                                    </Fragment>\r\n                                )}\r\n                                <StyledText\r\n                                    mode={mode}\r\n                                    className=\"sidenavHoverShow\"\r\n                                >\r\n                                    {item.name}\r\n                                </StyledText>\r\n                                <Box mx=\"auto\"></Box>\r\n                                {item.badge && (\r\n                                    <BadgeValue className=\"sidenavHoverShow\">\r\n                                        {item.badge.value}\r\n                                    </BadgeValue>\r\n                                )}\r\n                            </ButtonBase>\r\n                        </NavLink>\r\n                    </InternalLink>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return <div className=\"navigation\">{renderLevels(items)}</div>\r\n}\r\n\r\nexport default React.memo(MatxVerticalNav)\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\n\r\nconst Container = styled('div')(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    position: 'relative',\r\n}))\r\n\r\nconst MatxSidenavContainer = ({ children }) => {\r\n    return <Container>{children}</Container>\r\n}\r\n\r\nexport default MatxSidenavContainer\r\n","import React from 'react'\r\nimport { useMediaQuery } from '@mui/material'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\n\r\nconst SideNav = styled('div')(({ theme, width }) => ({\r\n    position: 'relative',\r\n    width: width,\r\n    transition: 'width 250ms ease',\r\n    overflow: 'hidden',\r\n    zIndex: 91,\r\n    background: theme.palette.background.default,\r\n    [theme.breakpoints.down('sm')]: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n    },\r\n}))\r\n\r\nconst SideNavOverlay = styled('div')(() => ({\r\n    position: 'absolute',\r\n    zIndex: 90,\r\n    width: '100%',\r\n    height: '100%',\r\n    background: 'rgba(0, 0, 0, 0.74)',\r\n}))\r\n\r\nconst MatxSidenav = ({\r\n    sx,\r\n    open,\r\n    children,\r\n    toggleSidenav,\r\n    width = '220px',\r\n}) => {\r\n    const theme = useTheme()\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return (\r\n        <Box height=\"100%\" display=\"flex\">\r\n            <SideNav sx={sx} width={open || !isMobile ? width : '0px'}>\r\n                {children}\r\n            </SideNav>\r\n            {open && isMobile && <SideNavOverlay onClick={toggleSidenav} />}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MatxSidenav\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\n\r\nconst Content = styled('div')(() => ({\r\n    flexGrow: 1,\r\n    height: '100%',\r\n    position: 'relative',\r\n}))\r\n\r\nconst MatxSidenavContent = ({ children }) => {\r\n    return <Content>{children}</Content>\r\n}\r\n\r\nexport default MatxSidenavContent\r\n","import React from 'react'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { CssBaseline, ThemeProvider } from '@mui/material'\r\n\r\nconst MatxTheme = ({ children }) => {\r\n    const { settings } = useSettings()\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\r\n    return (\r\n        <ThemeProvider theme={activeTheme}>\r\n            <CssBaseline />\r\n            {children}\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default MatxTheme\r\n","import React from 'react'\r\nimport { Icon } from '@mui/material'\r\nimport { styled, lighten, useTheme } from '@mui/system'\r\nimport { convertHexToRGB } from 'utils'\r\n\r\nconst RectangleRoot = styled('div')(({ theme, color }) => ({\r\n    opacity: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    \"& h5\": {\r\n        margin: 0,\r\n        fontWeight: '500',\r\n        color: theme.palette.primary.main\r\n    },\r\n    background: color === \"primary\" ?\r\n        `rgba(${convertHexToRGB(theme.palette.primary.main)}, 0.15) !important` :\r\n        color === \"green\" ?\r\n            'rgba(9, 182, 109, 0.15) !important' :\r\n            color === \"green\" ? `${lighten(theme.palette.secondary.main, 0.85)}` : `${lighten(theme.palette.error.main, 0.85)}`\r\n}))\r\n\r\nconst RectangleAvatar = ({ color = 'primary', icon, textIcon, style }) => {\r\n    const theme = useTheme()\r\n    const primary = theme.palette.primary.main\r\n\r\n    return (\r\n        <RectangleRoot sx={style}>\r\n            {textIcon ? (\r\n                <h5>{textIcon}</h5>\r\n            ) : (\r\n                <Icon sx={{ color: primary }}>{icon}</Icon>\r\n            )}\r\n        </RectangleRoot>\r\n    )\r\n}\r\n\r\nexport default RectangleAvatar\r\n","import React from 'react'\r\nimport { Small } from \"../Typography\"\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport { IconButton, Icon } from '@mui/material'\r\nimport RectangleAvatar from '../RectangleAvatar/RectangleAvatar'\r\nimport { convertHexToRGB } from 'utils'\r\n\r\nconst ItemContainer = styled('div')(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    borderRadius: '8px',\r\n    cursor: 'pointer',\r\n    paddingLeft: '8px',\r\n    paddingRight: '8px',\r\n    transition: 'all 300ms ease',\r\n    '&:hover': {\r\n        background: 'rgba(0,0,0, .08)',\r\n        paddingLeft: '8px',\r\n        overflow: 'hidden',\r\n        '& .action-icon, & .rectangle-box': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n    '& .action-icon, & .rectangle-box': {\r\n        opacity: 0.76,\r\n    },\r\n}))\r\n\r\nconst Title = styled('h6')(({ theme }) => ({\r\n    margin: 0,\r\n    fontSize: '13px',\r\n    fontWeight: 'normal',\r\n    color: `rgba(${convertHexToRGB(theme.palette.text.primary)}, 0.87)`\r\n}))\r\n\r\nconst MatxListItem1 = (props) => {\r\n    const {\r\n        title,\r\n        subtitle,\r\n        iconText,\r\n        iconColor,\r\n        bulletIcon,\r\n        actionIcon,\r\n    } = props\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n\r\n    return (\r\n        <ItemContainer>\r\n            <RectangleAvatar\r\n                color={iconColor}\r\n                icon={bulletIcon}\r\n                iconText={iconText}\r\n            ></RectangleAvatar>\r\n\r\n            <Box ml={2} flexGrow={1}>\r\n                <Title>{title}</Title>\r\n                <Small sx={{ color: secondary }}>{subtitle}</Small>\r\n            </Box>\r\n\r\n            {actionIcon && (\r\n                <IconButton className=\"action-icon\">\r\n                    <Icon color={iconColor}>{actionIcon}</Icon>\r\n                </IconButton>\r\n            )}\r\n        </ItemContainer>\r\n    )\r\n}\r\n\r\nexport default MatxListItem1\r\n","import React from 'react'\r\nimport { styled } from '@mui/system'\r\nimport { Dialog, Button } from '@mui/material'\r\n\r\nconst DialogBox = styled('div')(() => ({\r\n    width: 360,\r\n    padding: '32px',\r\n    textAlign: 'center',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n}))\r\n\r\nconst Title = styled('h4')(() => ({\r\n    margin: 0,\r\n    marginBottom: '8px',\r\n    textTransform: 'capitalize'\r\n}))\r\n\r\nconst Controller = styled('div')(() => ({\r\n    margin: '8px',\r\n    paddingTop: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n}))\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n    margin: '8px',\r\n    paddingLeft: '24px',\r\n    paddingRight: '24px',\r\n    overflow: 'hidden',\r\n    borderRadius: '300px',\r\n    transition: 'all 250ms',\r\n    '&.yesBtn': {\r\n        '&:hover': {\r\n            color: '#ffffff',\r\n            background: `${theme.palette.primary.main} !important`,\r\n            backgroundColor: `${theme.palette.primary.main} !important`,\r\n            fallbacks: [{ color: 'white !important' }],\r\n        }\r\n    },\r\n    '&.noBtn': {\r\n        '&:hover': {\r\n            color: '#ffffff',\r\n            background: `${theme.palette.secondary.main} !important`,\r\n            backgroundColor: `${theme.palette.secondary.main} !important`,\r\n            fallbacks: [{ color: 'white !important' }],\r\n        }\r\n    },\r\n}))\r\n\r\nconst ConfirmationDialog = ({\r\n    open,\r\n    onConfirmDialogClose,\r\n    text,\r\n    title = 'confirm',\r\n    onYesClick,\r\n}) => {\r\n    return (\r\n        <Dialog maxWidth=\"xs\" open={open} onClose={onConfirmDialogClose}>\r\n            <DialogBox>\r\n                <Title>{title}</Title>\r\n                <p>{text}</p>\r\n                <Controller>\r\n                    <StyledButton\r\n                        className=\"yesBtn\"\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={onYesClick}\r\n                    >\r\n                        Yes\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        className=\"noBtn\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={onConfirmDialogClose}\r\n                    >\r\n                        No\r\n                    </StyledButton>\r\n                </Controller>\r\n            </DialogBox>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ConfirmationDialog\r\n","import React from 'react'\r\nimport { Small } from \"../Typography\"\r\nimport { styled, useTheme } from '@mui/system'\r\nimport { Grid, LinearProgress, Typography } from '@mui/material'\r\n\r\nconst CustomLinearProgress = styled(LinearProgress)(() => ({\r\n    borderRadius: 2,\r\n    background: 'rgba(0, 0, 0, 0.1)',\r\n}))\r\n\r\nconst MatxProgressBar = ({\r\n    value = 75,\r\n    color = 'primary',\r\n    text = '',\r\n    spacing = 2,\r\n    coloredText = false,\r\n}) => {\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={spacing}\r\n            alignItems=\"center\"\r\n        >\r\n            <Grid item xs={text ? 7 : 12}>\r\n                <CustomLinearProgress\r\n                    color={color}\r\n                    value={value}\r\n                    variant=\"determinate\"\r\n                ></CustomLinearProgress>\r\n            </Grid>\r\n            {text !== '' && (\r\n                <Grid item xs={text ? 5 : false}>\r\n                    <Typography color={color}>\r\n                        <Small sx={{ color: coloredText ? '' : secondary }}>\r\n                            {text}\r\n                        </Small>\r\n                    </Typography>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MatxProgressBar\r\n","import clsx from 'clsx'\r\nimport React from 'react'\r\nimport { Box, styled } from '@mui/material'\r\n\r\nconst StyledBox = styled(Box)(({ theme, textTransformStyle, ellipsis }) => ({\r\n    textTransform: textTransformStyle || 'none',\r\n    whiteSpace: ellipsis ? 'nowrap' : 'normal',\r\n    overflow: ellipsis ? 'hidden' : '',\r\n    textOverflow: ellipsis ? 'ellipsis' : '',\r\n    // color: theme.palette.primary.contrastText,\r\n}))\r\n\r\nexport const H1 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({ [className || '']: true })}\r\n            component=\"h1\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"28px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H2 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({ [className || '']: true })}\r\n            component=\"h2\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"24px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H3 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({ [className || '']: true })}\r\n            component=\"h3\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"18px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H4 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"h4\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"16px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H5 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"h5\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"14px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H6 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"h6\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"13px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Paragraph = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"p\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"14px\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Small = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"small\"\r\n            fontSize=\"12px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Span = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"span\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Tiny = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"small\"\r\n            fontSize=\"10px\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n","const MockAdapter = require('axios-mock-adapter')\r\nconst axios = require('axios')\r\nconst Mock = new MockAdapter(axios)\r\nexport default Mock\r\n","import Mock from '../mock'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst JWT_SECRET = 'jwt_secret_key'\r\nconst JWT_VALIDITY = '7 days'\r\n\r\nconst userList = [\r\n    {\r\n        id: 1,\r\n        role: 'SA',\r\n        name: '',\r\n        username: 'taxrx',\r\n        email: 'taxrx.in@taxrx.in',\r\n        avatar: '/assets/images/face.jpg',\r\n        age: 25,\r\n    },\r\n]\r\n\r\n// FOLLOWING CODES ARE MOCK SERVER IMPLEMENTATION\r\n// YOU NEED TO BUILD YOUR OWN SERVER\r\n// IF YOU NEED HELP ABOUT SERVER SIDE IMPLEMENTATION\r\n// CONTACT US AT support@ui-lib.com\r\n\r\nMock.onPost('/api/auth/login').reply(async (config) => {\r\n    try {\r\n        await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n        const { email } = JSON.parse(config.data)\r\n        const user = userList.find((u) => u.email === email)\r\n\r\n        if (!user) {\r\n            return [400, { message: 'Invalid email or password' }]\r\n        }\r\n        const accessToken = jwt.sign({ userId: user.id }, JWT_SECRET, {\r\n            expiresIn: JWT_VALIDITY,\r\n        })\r\n\r\n        return [\r\n            200,\r\n            {\r\n                accessToken,\r\n                user: {\r\n                    id: user.id,\r\n                    avatar: user.avatar,\r\n                    email: user.email,\r\n                    name: user.name,\r\n                    role: user.role,\r\n                },\r\n            },\r\n        ]\r\n    } catch (err) {\r\n        console.error(err)\r\n        return [500, { message: 'Internal server error' }]\r\n    }\r\n})\r\n\r\nMock.onPost('/api/auth/register').reply((config) => {\r\n    try {\r\n        const { email, username } = JSON.parse(config.data)\r\n        const user = userList.find((u) => u.email === email)\r\n\r\n        if (user) {\r\n            return [400, { message: 'User already exists!' }]\r\n        }\r\n        const newUser = {\r\n            id: 2,\r\n            role: 'GUEST',\r\n            name: '',\r\n            username: username,\r\n            email: email,\r\n            avatar: '/assets/images/face-6.jpg',\r\n            age: 25,\r\n        }\r\n        userList.push(newUser)\r\n\r\n        const accessToken = jwt.sign({ userId: newUser.id }, JWT_SECRET, {\r\n            expiresIn: JWT_VALIDITY,\r\n        })\r\n\r\n        return [\r\n            200,\r\n            {\r\n                accessToken,\r\n                user: {\r\n                    id: newUser.id,\r\n                    avatar: newUser.avatar,\r\n                    email: newUser.email,\r\n                    name: newUser.name,\r\n                    username: newUser.username,\r\n                    role: newUser.role,\r\n                },\r\n            },\r\n        ]\r\n    } catch (err) {\r\n        console.error(err)\r\n        return [500, { message: 'Internal server error' }]\r\n    }\r\n})\r\n\r\nMock.onGet('/api/auth/profile').reply((config) => {\r\n    try {\r\n        const { Authorization } = config.headers\r\n        if (!Authorization) {\r\n            return [401, { message: 'Invalid Authorization token' }]\r\n        }\r\n\r\n        const accessToken = Authorization.split(' ')[1]\r\n        const { userId } = jwt.verify(accessToken, JWT_SECRET)\r\n        const user = userList.find((u) => u.id === userId)\r\n\r\n        if (!user) {\r\n            return [401, { message: 'Invalid authorization token' }]\r\n        }\r\n\r\n        return [\r\n            200,\r\n            {\r\n                user: {\r\n                    id: user.id,\r\n                    avatar: user.avatar,\r\n                    email: user.email,\r\n                    name: user.name,\r\n                    role: user.role,\r\n                },\r\n            },\r\n        ]\r\n    } catch (err) {\r\n        console.error(err)\r\n        return [500, { message: 'Internal server error' }]\r\n    }\r\n})\r\n","import Mock from './mock'\r\n\r\nimport './db/auth'\r\n\r\nMock.onAny().passThrough()\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom-old'\r\nimport Logo from './Logo'\r\nimport Button from '@mui/material/Button'\r\n// import { Navigate } from 'react-router-dom'\r\n\r\nconst Home = () => (\r\n    <div className=\"container mt-3\">\r\n        <Logo />\r\n\r\n        <div\r\n            class=\"jumbotron vw-50 p-5 mt-3 d-flex flex-column align-items-center justify-content-center\"\r\n            style={{\r\n                backgroundColor: 'whitesmoke',\r\n                padding: '35px',\r\n                border: '1px solid #dfdfdf',\r\n                borderRadius: '200px 50px',\r\n                width: '800px',\r\n                margin: 'auto',\r\n            }}\r\n        >\r\n            <h1 class=\"display-3\">\r\n                Welcome to<b> TaxRx </b>\r\n            </h1>\r\n            <p class=\"lead\">Send an Invoice or File GST Return.</p>\r\n            <hr class=\"my-4\" />\r\n            <p>Click the Log In button</p>\r\n            <Link\r\n                to=\"/login\"\r\n                style={{ color: 'white', textDecoration: 'None' }}\r\n            >\r\n                <Button\r\n                    class=\"btn btn-primary btn-lg\"\r\n                    style={{ borderRadius: '15px' }}\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom-old'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../actions/auth'\r\nimport Logo from './Logo'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { email, password } = formData\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        login(email, password)\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/launchpad\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container pt-3 d-flex flex-column align-items-center justify-content-center\">\r\n                <Logo />\r\n                <div\r\n                    style={{\r\n                        backgroundColor: '#fff',\r\n                        padding: '35px',\r\n                        border: '1px solid #dfdfdf',\r\n                        borderRadius: '50px 50px',\r\n                    }}\r\n                >\r\n                    <h1 style={{ textAlign: 'center' }}>Sign In</h1>\r\n                    <p style={{ textAlign: 'center' }}>\r\n                        Sign into your Account\r\n                    </p>\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                style={{ borderRadius: '15px' }}\r\n                                onChange={(e) => onChange(e)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                style={{ borderRadius: '15px' }}\r\n                                onChange={(e) => onChange(e)}\r\n                                minLength=\"6\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-primary mb-2 d-flex align-items-center justify-content-center  \"\r\n                            type=\"submit\"\r\n                            style={{\r\n                                borderRadius: '50px 50px',\r\n                                width: '180px',\r\n                                marginLeft: '15px',\r\n                            }}\r\n                        >\r\n                            Login\r\n                        </button>\r\n                        {/* <Link to=\"/launchpad\" style={{ color: 'white' }}>\r\n                            <button\r\n                                className=\"btn btn-primary btn-block\"\r\n                                style={{\r\n                                    borderRadius: '50px 50px',\r\n                                    width: '180px',\r\n                                    marginLeft: '15px',\r\n                                }}\r\n                                type=\"submit\"\r\n                            >\r\n                                LaunchPad\r\n                            </button>\r\n                        </Link> */}\r\n                    </form>\r\n                </div>\r\n                <p className=\"mt-3\">\r\n                    Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </p>\r\n                <p className=\"mt-1\">\r\n                    Forgot your Password?{' '}\r\n                    <Link to=\"/reset-password\">Reset Password</Link>\r\n                </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom-old';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom-old'\r\nimport { connect } from 'react-redux'\r\nimport { reset_password_confirm } from '../actions/auth'\r\nimport Logo from './Logo'\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: '',\r\n    })\r\n\r\n    const { new_password, re_new_password } = formData\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const uid = match.params.uid\r\n        const token = match.params.token\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password)\r\n        setRequestSent(true)\r\n    }\r\n\r\n    if (requestSent) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container pt-3 d-flex flex-column align-items-center justify-content-center\">\r\n            <Logo />\r\n            <div\r\n                style={{\r\n                    backgroundColor: '#000',\r\n                    padding: '35px',\r\n                    border: '1px solid #dfdfdf',\r\n                    borderRadius: '50px 50px',\r\n                }}\r\n            >\r\n                <form onSubmit={(e) => onSubmit(e)}>\r\n                    <div className=\"form-group d-flex flex-column\">\r\n                        <label>New Password</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"password\"\r\n                            placeholder=\"New Password\"\r\n                            name=\"new_password\"\r\n                            value={new_password}\r\n                            style={{ width:\"90px\" ,borderRadius: '15px' }}\r\n                            onChange={(e) => onChange(e)}\r\n                            minLength=\"6\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            name=\"re_new_password\"\r\n                            value={re_new_password}\r\n                            style={{ borderRadius: '15px' }}\r\n                            onChange={(e) => onChange(e)}\r\n                            minLength=\"6\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-danger\" type=\"submit\">\r\n                        Reset Password\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm)\r\n","import { Button, Card, Icon } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom-old'\r\nimport styled from 'styled-components'\r\n\r\nconst Type = styled.div``\r\nconst Money = styled.div``\r\n\r\n\r\nconst Cards = (props) => {\r\n\r\n    return (\r\n        <Card\r\n            style={{ height: '300px', width: '900px', marginTop: \"25px\" }}\r\n            sx={{ px: 2, py: 2, mb: 3 }}\r\n        >\r\n            <dt>\r\n                <Type\r\n                    clasName=\"\"\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: '20px',\r\n                        marginBottom: '10px',\r\n                    }}\r\n                    aria-label=\"Tense Biceps\"\r\n                >\r\n                    {props.type}\r\n                </Type>\r\n                <Money\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: '20px',\r\n                        marginBottom: '10px',\r\n                        fontSize: '20px',\r\n                    }}\r\n                >\r\n                    {props.money}\r\n                </Money>\r\n            </dt>\r\n            <hr />\r\n            <dd>\r\n                <ul style={{ fontSize: '14px', listStyle: 'none' }}>\r\n                    <li>\r\n                        <Icon\r\n                            style={{\r\n                                fontSize: '15px',\r\n                                marginRight: '5px',\r\n                                color: 'blue',\r\n                            }}\r\n                        >\r\n                            verified\r\n                        </Icon>\r\n                        {props.meaning1}{' '}\r\n                    </li>\r\n                    <li>\r\n                        {' '}\r\n                        <Icon\r\n                            style={{\r\n                                fontSize: '15px',\r\n                                marginRight: '5px',\r\n                                color: 'blue',\r\n                            }}\r\n                        >\r\n                            verified\r\n                        </Icon>\r\n                        {props.meaning2}{' '}\r\n                    </li>\r\n                    <li>\r\n                        {' '}\r\n                        <Icon\r\n                            style={{\r\n                                fontSize: '15px',\r\n                                marginRight: '5px',\r\n                                color: 'blue',\r\n                            }}\r\n                        >\r\n                            verified\r\n                        </Icon>\r\n                        {props.meaning3}{' '}\r\n                    </li>\r\n                </ul>\r\n                {/* {props.description} */}\r\n            </dd>\r\n\r\n            <Link style={{ textDecoration: 'None' }} to='/pricing'>\r\n            <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                style={{\r\n                    marginTop: '20px',\r\n                    borderRadius: '50px 50px',\r\n                    width: '250px',\r\n                    backgroundColor: \"darkblue\",\r\n                    \r\n                    marginLeft: '30px',\r\n                }}\r\n            >\r\n                Next\r\n            </Button>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","const highpurchases = [\r\n    {\r\n        id: 1,\r\n        type: 'BASIC PLUS',\r\n        money: '₹ 599/yr',\r\n        meaning1: '1 Months return filling ',\r\n        meaning2: '1 Months personal assitance ',\r\n        meaning3: 'Includes access to perks ',\r\n\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        type: 'STANDARD PLUS',\r\n        money: '₹ 2999/yr',\r\n        meaning1: '6 Months return filling ',\r\n        meaning2: '6 Months personal assitance ',\r\n        meaning3: 'Includes access to perks ',\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        type: 'PREMIUM PLUS',\r\n        money: '₹ 4999/yr',\r\n        meaning1: '12 Months return filling ',\r\n        meaning2: '12 Months personal assitance ',\r\n        meaning3: 'Includes access to perks ',\r\n    },\r\n]\r\n\r\nexport default highpurchases\r\n\r\n","const purchases = [\r\n    {\r\n        id: 1,\r\n        type: 'BASIC',\r\n        money: '₹ 999/yr',\r\n        meaning1: 'GST Registration ',\r\n        meaning2: '1 Months return filling ',\r\n        meaning3: '1 Months personal assitance ',\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        type: 'STANDARD',\r\n        money: '₹ 2499/yr',\r\n        meaning1: 'GST Registration ',\r\n        meaning2: '3 Months return filling ',\r\n        meaning3: '3 Months personal assitance ',\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        type: 'PREMIUM',\r\n        money: '₹ 5999/yr',\r\n        meaning1: 'GST Registration ',\r\n        meaning2: '12 Months return filling ',\r\n        meaning3: '12 Months personal assitance ',\r\n    },\r\n]\r\n\r\nexport default purchases\r\n","import { Container } from '@mui/material'\r\nimport Cards from './Cards'\r\nimport highpurchases from './highpurchases'\r\n\r\nimport purchases from './purchases'\r\n\r\nconst Pricing = () => {\r\n    return (\r\n        <div>\r\n            <Container className=\" mt-3  \" style={{}}>\r\n                <div\r\n                    item\r\n                    lg={4}\r\n                    md={4}\r\n                    sm={12}\r\n                    xs={12}\r\n                    style={{\r\n                        display: 'flex',\r\n\r\n                        flexDirection: 'row',\r\n                        gap: '3rem',\r\n                        //     marginTop: '5rem',\r\n                    }}\r\n                    className=\"\"\r\n                >\r\n                    {purchases.map((emojiTerm) => (\r\n                        <Cards\r\n                            key={emojiTerm.id}\r\n                            type={emojiTerm.type}\r\n                            money={emojiTerm.money}\r\n                            meaning1={emojiTerm.meaning1}\r\n                            meaning2={emojiTerm.meaning2}\r\n                            meaning3={emojiTerm.meaning3}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </Container>\r\n            <Container className=\"mt-3  \" style={{}}>\r\n                <div\r\n                    item\r\n                    lg={4}\r\n                    md={4}\r\n                    sm={12}\r\n                    xs={12}\r\n                    style={{\r\n                        display: 'flex',\r\n\r\n                        flexDirection: 'row',\r\n                        gap: '3rem',\r\n                        //     marginTop: '5rem',\r\n                    }}\r\n                    className=\"\"\r\n                >\r\n                    {highpurchases.map((highEmojiTerm) => (\r\n                        <Cards\r\n                            key={highEmojiTerm.id}\r\n                            type={highEmojiTerm.type}\r\n                            money={highEmojiTerm.money}\r\n                            meaning1={highEmojiTerm.meaning1}\r\n                            meaning2={highEmojiTerm.meaning2}\r\n                            meaning3={highEmojiTerm.meaning3}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n        //   {/* <Container\r\n        //       className=\"d-flex mt-3 justify-content-between\"\r\n        //       style={{}}\r\n        //   >\r\n        //       <Grid item lg={4} md={4} sm={12} xs={12}>\r\n        //           <Card\r\n        //               sx={{ px: 5, py: 2, mb: 3 }}\r\n        //               style={{ height: '300px', width: '300px' }}\r\n        //           >\r\n        //               hi\r\n        //           </Card>\r\n        //       </Grid>\r\n        //       <Grid item lg={4} md={4} sm={12} xs={12}>\r\n        //           <Card\r\n        //               sx={{ px: 5, py: 2, mb: 3 }}\r\n        //               style={{ height: '300px', width: '300px' }}\r\n        //           ></Card>\r\n        //       </Grid>\r\n        //       <Grid item lg={4} md={4} sm={12} xs={12}>\r\n        //           <Card\r\n        //               sx={{ px: 5, py: 2, mb: 3 }}\r\n        //               style={{ height: '300px', width: '300px' }}\r\n        //           ></Card>\r\n        //       </Grid>\r\n        //   </Container> */}\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom-old'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../actions/auth'\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const logout_user = () => {\r\n        logout()\r\n        setRedirect(true)\r\n    }\r\n    // eslint-disable-next-line\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/signup\">\r\n                    Sign Up\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n        // eslint-disable-next-line\r\n    const authLinks = () => (\r\n        <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#!\" onClick={logout_user}>\r\n                Logout\r\n            </a>\r\n        </li>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)\r\n","import React, { useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, [checkAuthenticated, load_user]);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/tax.c9bd1e59.png\";","import React from 'react'\r\nimport Tax from './tax.png'\r\nimport styled from 'styled-components'\r\nimport { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\nimport { Button} from '@mui/material'\r\n\r\nconst Conatainer = styled.div`\r\n    background: linear-gradient(\r\n        to right,\r\n        #ffffff 0%,\r\n        #ffffff 35%,\r\n        #99ebff 65%,\r\n        #1a1aff 100%\r\n    );\r\n    height: 100vh;\r\n    padding: 20px;\r\n    padding-left: 150px;\r\n    padding-top: 60px;\r\n`\r\n\r\nexport class GetStarted1 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/start/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                StartId: null,\r\n                fname: event.target.fname.value,\r\n                lname: event.target.lname.value,\r\n                business: event.target.business.value,\r\n                address: event.target.address.value,\r\n                state: event.target.state.value,\r\n                code: event.target.code.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location = '/onboarding'\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Conatainer>\r\n                <img\r\n                    src={Tax}\r\n                    alt=\"Tax_Image\"\r\n                    style={{\r\n                        float: 'right',\r\n                        width: '550px',\r\n                        height: '500px',\r\n                        marginTop: '20px',\r\n                        marginRight: '150px',\r\n                    }}\r\n                />\r\n                <h1>Welcome to TaxRx !!</h1>\r\n                <p>Send the Invoice or File GST Return</p>\r\n\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={() => null}\r\n                    {...this.props}\r\n                >\r\n                    <div className=\" d-flex\">\r\n                        <Form.Group controlId=\"fname\">\r\n                            <Form.Control\r\n                                //  className=\" mb-2 p-2\"\r\n                                style={{\r\n                                    width: '85%',\r\n                                    marginBottom: '16px',\r\n                                    borderRadius: '20px',\r\n                                    marginTop: '5px',\r\n                                }}\r\n                                size=\"lg\"\r\n                                type=\"text\"\r\n                                placeholder=\"First Name\"\r\n                                name=\"Name\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"lname\">\r\n                            <Form.Control\r\n                                style={{\r\n                                    width: '80%',\r\n                                    marginBottom: '16px',\r\n                                    borderRadius: '20px',\r\n                                    marginTop: '5px',\r\n                                }}\r\n                                size=\"lg\"\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                name=\"Name\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n                    <Form.Group\r\n                        controlId=\"business\"\r\n                        className=\"d-flex  flex-column\"\r\n                    >\r\n                        <Form.Label>What's your business name?</Form.Label>\r\n                        <Form.Control\r\n                            style={{\r\n                                width: '70%',\r\n                                marginBottom: '16px',\r\n                                borderRadius: '20px',\r\n                            }}\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Bussiness !!\"\r\n                            name=\"Name\"\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                        controlId=\"address\"\r\n                        className=\"d-flex  flex-column\"\r\n                    >\r\n                        <Form.Label>What's your Office Address</Form.Label>\r\n                        <Form.Control\r\n                            style={{\r\n                                width: '70%',\r\n                                marginBottom: '16px',\r\n                                borderRadius: '20px',\r\n                            }}\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Address !!\"\r\n                            name=\"Name\"\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"state\">\r\n                        <Form.Label>What's your State Name</Form.Label>\r\n                        <div className=\" d-flex flex-column\">\r\n                            <select\r\n                                class=\"form-select form-select-lg p-2\"\r\n                                aria-label=\"form-select-lg example\"\r\n                                style={{\r\n                                    width: '70%',\r\n                                    marginBottom: '10px',\r\n                                    color: 'gray',\r\n                                    borderRadius: '20px',\r\n                                }}\r\n                                name=\"state\"\r\n                                required\r\n                            >\r\n                                <option value=\"AN\">\r\n                                    Andaman and Nicobar Islands\r\n                                </option>\r\n                                <option value=\"AP\">Andhra Pradesh</option>\r\n                                <option value=\"AR\">Arunachal Pradesh</option>\r\n                                <option value=\"AS\">Assam</option>\r\n                                <option value=\"BR\">Bihar</option>\r\n                                <option value=\"CH\">Chandigarh</option>\r\n                                <option value=\"CT\">Chhattisgarh</option>\r\n                                <option value=\"DN\">\r\n                                    Dadra and Nagar Haveli\r\n                                </option>\r\n                                <option value=\"DD\">Daman and Diu</option>\r\n                                <option value=\"DL\" selected>\r\n                                    Delhi\r\n                                </option>\r\n                                <option value=\"GA\">Goa</option>\r\n                                <option value=\"GJ\">Gujarat</option>\r\n                                <option value=\"HR\">Haryana</option>\r\n                                <option value=\"HP\">Himachal Pradesh</option>\r\n                                <option value=\"JK\">Jammu and Kashmir</option>\r\n                                <option value=\"JH\">Jharkhand</option>\r\n                                <option value=\"KA\">Karnataka</option>\r\n                                <option value=\"KL\">Kerala</option>\r\n                                <option value=\"LA\">Ladakh</option>\r\n                                <option value=\"LD\">Lakshadweep</option>\r\n                                <option value=\"MP\">Madhya Pradesh</option>\r\n                                <option value=\"MH\">Maharashtra</option>\r\n                                <option value=\"MN\">Manipur</option>\r\n                                <option value=\"ML\">Meghalaya</option>\r\n                                <option value=\"MZ\">Mizoram</option>\r\n                                <option value=\"NL\">Nagaland</option>\r\n                                <option value=\"OR\">Odisha</option>\r\n                                <option value=\"PY\">Puducherry</option>\r\n                                <option value=\"PB\">Punjab</option>\r\n                                <option value=\"RJ\">Rajasthan</option>\r\n                                <option value=\"SK\">Sikkim</option>\r\n                                <option value=\"TN\">Tamil Nadu</option>\r\n                                <option value=\"TG\">Telangana</option>\r\n                                <option value=\"TR\">Tripura</option>\r\n                                <option value=\"UP\">Uttar Pradesh</option>\r\n                                <option value=\"UT\">Uttarakhand</option>\r\n                                <option value=\"WB\">West Bengal</option>\r\n                            </select>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                        controlId=\"code\"\r\n                        className=\" d-flex flex-column\"\r\n                    >\r\n                        <Form.Label>What's your Pin Code</Form.Label>\r\n                        <Form.Control\r\n                            style={{\r\n                                width: '70%',\r\n                                marginBottom: '16px',\r\n                                borderRadius: '20px',\r\n                            }}\r\n                            size=\"lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Pin Code !!\"\r\n                            name=\"Name\"\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        style={{\r\n                            marginTop: '20px',\r\n                            borderRadius: '50px 50px',\r\n                            width: '300px',\r\n                            marginLeft: '30px',\r\n                        }}\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                    {/* <Link to=\"/onboarding\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            style={{\r\n                                marginTop: '20px',\r\n                                borderRadius: '50px 50px',\r\n                                width: '10px',\r\n                                marginLeft: '30px',\r\n                            }}\r\n                        >\r\n                            <Icon\r\n                                style={{\r\n                                    color: 'white',\r\n                                    textDecoration: 'none',\r\n                                }}\r\n                            >\r\n                                arrow_right_alt\r\n                            </Icon>\r\n                        </Button>\r\n                    </Link> */}\r\n                </ValidatorForm>\r\n            </Conatainer>\r\n        )\r\n    }\r\n}\r\n","import { Button } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom-old'\r\nimport LocalAtmOutlinedIcon from '@mui/icons-material/LocalAtmOutlined'\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\r\nimport styled from 'styled-components'\r\n\r\nconst Conatainer = styled.div`\r\n    background: linear-gradient(\r\n        to right,\r\n        #ffffff 0%,\r\n        #ffffff 35%,\r\n        #99ebff 50%,\r\n        #1a1aff 100%\r\n    );\r\n    height: 100vh;\r\n    padding: 20px;\r\n    padding-left: 150px;\r\n    padding-top: 60px;\r\n    .butt {\r\n        justify-content: space-between;\r\n        text-decoration: none;\r\n        background-color: white;\r\n        border-radius: 30px;\r\n    }\r\n    .butt:hover {\r\n        background: #ccffff;\r\n    }\r\n`\r\nconst Left = styled.div`\r\n    flex: 1;\r\n    margin-top: 100px;\r\n    align-items: center;\r\n`\r\n\r\nconst Right = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    margin-top: 50px;\r\n`\r\n\r\nconst SearchContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 5px;\r\n`\r\nconst Wrapper = styled.div`\r\n    padding: 10px 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst GetStarted2 = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <Conatainer>\r\n            <Wrapper>\r\n                <Left>\r\n                    <h2>\r\n                        Hello,\r\n                        {props.fname}\r\n                    </h2>\r\n                    <p style={{ fontSize: '22px', marginTop: '50px' }}>\r\n                        What would you link to do in TaxRx?\r\n                    </p>\r\n                </Left>\r\n                <Right>\r\n                    <h2\r\n                        style={{\r\n                            color: 'whitesmoke',\r\n                            fontSize: '50px',\r\n                            marginBottom: '40px',\r\n                        }}\r\n                    >\r\n                        Choose a starting point{' '}\r\n                    </h2>\r\n                    <p\r\n                        style={{\r\n                            color: 'whitesmoke',\r\n                            fontSize: '30px',\r\n                            marginBottom: '40px',\r\n                        }}\r\n                    >\r\n                        You can do more later\r\n                    </p>\r\n                    <SearchContainer>\r\n                    <Link\r\n                                to=\"/dashboard/default\"\r\n                                style={{ textDecoration: 'None' }}\r\n                            >\r\n                        <Button\r\n                            style={{ outline: 'None' }}\r\n                            className=\"butt\"\r\n                            onClick=\"window.location.href=window.location.href\"\r\n                            type=\"submit\"\r\n                            variant=\"outlined\"\r\n                            startIcon={\r\n                                <LocalAtmOutlinedIcon\r\n                                    style={{\r\n                                        color: 'white',\r\n                                        display: 'block',\r\n                                        height: '40px',\r\n                                        width: '50px',\r\n                                        marginRight: '10px',\r\n                                        'border-radius': '50%',\r\n                                        border: '8px solid blue',\r\n                                        backgroundColor: 'blue',\r\n                                    }}\r\n                                />\r\n                            }\r\n                            endIcon={\r\n                                <ArrowForwardIosIcon\r\n                                    style={{\r\n                                        color: 'blue',\r\n                                        position: 'relative',\r\n                                        left: '20px',\r\n                                        display: 'block',\r\n                                        height: '20px',\r\n                                        width: '110px',\r\n                                    }}\r\n                                />\r\n                            }\r\n                        >\r\n                                Send Invoices   \r\n                        </Button>\r\n                        </Link>\r\n                    </SearchContainer>\r\n                    <SearchContainer>\r\n                    <Link\r\n                                to=\"/prices/\"\r\n                                style={{ textDecoration: 'None' }}\r\n                            >\r\n                        <Button\r\n                            style={{ outline: 'None', marginTop: '20px' }}\r\n                            className=\"butt\"\r\n                            onClick=\"window.location.href=window.location.href\"\r\n                            variant=\"outlined\"\r\n                            startIcon={\r\n                                <LocalAtmOutlinedIcon\r\n                                    style={{\r\n                                        color: 'white',\r\n\r\n                                        display: 'block',\r\n                                        height: '40px',\r\n                                        width: '50px',\r\n                                        marginRight: '10px',\r\n                                        'border-radius': '50%',\r\n                                        border: '8px solid blue',\r\n                                        backgroundColor: 'blue',\r\n                                    }}\r\n                                />\r\n                            }\r\n                            endIcon={\r\n                                <ArrowForwardIosIcon\r\n                                    style={{\r\n                                        color: 'blue',\r\n                                        position: 'relative',\r\n                                        left: '15px',\r\n                                        display: 'block',\r\n                                        height: '20px',\r\n                                        width: '100px',\r\n                                    }}\r\n                                />\r\n                            }\r\n                        >\r\n                            \r\n                                File GST Return\r\n                            \r\n                        </Button>\r\n                        </Link>\r\n                    </SearchContainer>\r\n                </Right>\r\n            </Wrapper>\r\n        </Conatainer>\r\n    )\r\n}\r\n\r\nexport default GetStarted2\r\n","import React from 'react'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nconst AuthGuard = ({ children }) => {\r\n    const { isAuthenticated } = useAuth()\r\n\r\n    return <>{isAuthenticated ? children : <Navigate to=\"/session/signin\" />}</>\r\n}\r\n\r\nexport default AuthGuard\r\n","import React, { Suspense } from 'react';\r\nimport Loading from '../MatxLoading/MatxLoading'\r\n\r\nconst Loadable = (Component) => (props) => (\r\n   <Suspense fallback={<Loading />}>\r\n      <Component {...props} />\r\n   </Suspense>\r\n);\r\n\r\nexport default Loadable;","import React, { lazy } from 'react'\r\nimport Loadable from 'app/components/Loadable/Loadable'\r\nimport Pricing from 'app/containers/Pricing/Pricing'\r\n\r\nconst AppTable = Loadable(lazy(() => import('./tables/AppTable')))\r\nconst InvForm = Loadable(lazy(() => import('./forms/AppForm')))\r\nconst CustForm = Loadable(lazy(() => import('./forms/CustomerForm')))\r\nconst VenForm = Loadable(lazy(() => import('./forms/VendorForm')))\r\nconst AppUsers = Loadable(lazy(() => import('./forms/Addstart')))\r\nconst EstiForm = Loadable(lazy(() => import('./forms/EstimateForm')))\r\n// const AppCheckbox = Loadable(lazy(() => import(\"./checkbox/AppCheckbox\")));\r\nconst AppSwitch = Loadable(lazy(() => import('./switch/AppSwitch')))\r\n// const AppSlider = Loadable(lazy(() => import(\"./slider/AppSlider\")));\r\nconst AppAutoComplete = Loadable(\r\n    lazy(() => import('./auto-complete/AppAutoComplete'))\r\n)\r\n\r\n\r\n\r\nconst materialRoutes = [\r\n    {\r\n        path: '/material/table',\r\n        element: <AppTable />,\r\n    },\r\n    {\r\n        path: '/users',\r\n        element: <AppUsers />,\r\n    },\r\n    {\r\n        path: '/expenses',\r\n        element: <AppAutoComplete />,\r\n    },\r\n    {\r\n        path: '/vendors',\r\n        element: <VenForm />,\r\n    },\r\n    {\r\n        path: '/invoices',\r\n        element: <InvForm />,\r\n    },\r\n    {\r\n        path: '/customers',\r\n        element: <CustForm />,\r\n    },\r\n    {\r\n        path: '/estimates',\r\n        element: <EstiForm />,\r\n    },\r\n    {\r\n        path: '/material/switch',\r\n        element: <AppSwitch />,\r\n    },\r\n    {\r\n        path: '/prices/',\r\n        element: <Pricing />,\r\n    },\r\n]\r\n\r\nexport default materialRoutes\r\n","import React, { lazy } from 'react'\r\nimport Loadable from 'app/components/Loadable/Loadable';\r\n\r\nconst Analytics = Loadable(lazy(() => import(\"./Analytics\")));\r\n\r\nconst dashboardRoutes = [\r\n    {\r\n        path: '/dashboard/default',\r\n        element: <Analytics />,\r\n    },\r\n]\r\n\r\nexport default dashboardRoutes\r\n","import React, { lazy } from 'react'\r\nimport Loadable from 'app/components/Loadable/Loadable';\r\n\r\nconst NotFound = Loadable(lazy(() => import(\"./NotFound\")));\r\nconst ForgotPassword = Loadable(lazy(() => import(\"./../../containers/ResetPassword\")));\r\nconst JwtLogin = Loadable(lazy(() => import(\"./login/JwtLogin\")));\r\nconst JwtRegister = Loadable(lazy(() => import(\"./../../containers/Signup\")));\r\n\r\nconst sessionRoutes = [\r\n    {\r\n        path: '/session/signup',\r\n        element: <JwtRegister />,\r\n    },\r\n    {\r\n        path: '/session/signin',\r\n        element: <JwtLogin />,\r\n    },\r\n    {\r\n        path: '/session/forgot-password',\r\n        element: <ForgotPassword />,\r\n    },\r\n    {\r\n        path: '/session/404',\r\n        element: <NotFound />,\r\n    },\r\n]\r\n\r\nexport default sessionRoutes\r\n","import React from 'react'\r\nimport { MatxTheme } from './../components'\r\nimport { SettingsProvider } from './../contexts/SettingsContext'\r\nimport { useRoutes } from 'react-router-dom'\r\nimport { AuthProvider } from 'app/contexts/JWTAuthContext'\r\nimport { AllPages } from './../routes/routes'\r\nimport store from './../store'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst Dashboard = () => {\r\n    const all_pages = useRoutes(AllPages())\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <SettingsProvider>\r\n                <MatxTheme>\r\n                    <AuthProvider>{all_pages}</AuthProvider>\r\n                </MatxTheme>\r\n            </SettingsProvider>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import AuthGuard from 'app/auth/AuthGuard'\r\nimport NotFound from 'app/views/sessions/NotFound'\r\nimport materialRoutes from 'app/views/material-kit/MaterialRoutes'\r\nimport dashboardRoutes from 'app/views/dashboard/DashboardRoutes'\r\nimport sessionRoutes from 'app/views/sessions/SessionRoutes'\r\nimport MatxLayout from '../components/MatxLayout/MatxLayout'\r\nimport { Link } from 'react-router-dom-old'\r\n\r\nexport const AllPages = () => {\r\n    const all_routes = [\r\n        {\r\n            element: (\r\n                <AuthGuard>\r\n                    <MatxLayout />\r\n                </AuthGuard>\r\n            ),\r\n            children: [...dashboardRoutes, ...materialRoutes],\r\n        },\r\n        ...sessionRoutes,\r\n        {\r\n            path: '/',\r\n            element: <Link to=\"dashboard/default\" />,\r\n        },\r\n        {\r\n            path: '*',\r\n            element: <NotFound />,\r\n        },\r\n    ]\r\n\r\n    return all_routes\r\n}\r\n","import { Button, Icon, Grid, FormControlLabel, Checkbox, Container } from '@mui/material'\r\nimport SimpleCard from 'app/components/cards/SimpleCard'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n\r\nexport class GSTForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        fetch(`${process.env.REACT_APP_API_URL}/gst/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                GSTId: null,\r\n                Fname: event.target.Fname.value,\r\n                Lname: event.target.Lname.value,\r\n                GSTNo: event.target.GSTNo.value,\r\n                Email: event.target.Email.value,\r\n                Phone: event.target.Phone.value,\r\n                Address: event.target.Address.value,\r\n                State: event.target.State.value,\r\n                Code: event.target.Code.value,\r\n                Account: event.target.Account.value,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //alert(result)\r\n                    window.location.reload(true)\r\n                },\r\n                (error) => {\r\n                    //alert('Failed')\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        // const handleFileUpload = () => {}\r\n        return (\r\n            <Container style={{ marginTop: '50px' }}>\r\n                <SimpleCard ><span style={{ fontSize: '20px', fontWeight: 'bold', marginLeft: '20px' }}>GST REGISTRATION</span>\r\n                    <ValidatorForm\r\n                        onSubmit={this.handleSubmit}\r\n                        onError={() => null}\r\n                        {...this.props}\r\n                    >\r\n                        <Grid container spacing={5}>\r\n                            <Grid\r\n                                item\r\n                                lg={6}\r\n                                md={10}\r\n                                sm={2}\r\n                                xs={20}\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                <Form.Group controlId=\"Fname\">\r\n                                    <Form.Control\r\n                                        //  className=\" mb-2 p-2\"\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            marginLeft: '50px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"First Name\"\r\n                                        name=\"Fname\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"GSTNo\">\r\n                                    <Form.Control\r\n                                        //  className=\" mb-2 p-2\"\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            marginLeft: '50px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Gst No\"\r\n                                        name=\"Gst no\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"Phone\">\r\n                                    <Form.Control\r\n                                        //  className=\" mb-2 p-2\"\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            borderRadius: '15px',\r\n                                            marginLeft: '50px',\r\n                                            marginBottom: '16px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Phone Number\"\r\n                                        name=\"Phone\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"State\">\r\n                                    <Form.Control\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            marginLeft: '50px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"State\"\r\n                                        name=\"State\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"Account\">\r\n                                    <Form.Control\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            marginLeft: '50px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Account Number\"\r\n                                        name=\"Account\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <FormControlLabel\r\n                                    style={{marginLeft: '50px',}}\r\n                                    control={<Checkbox />}\r\n                                    label=\"I have read and agree to the terms of service.\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                                item\r\n                                lg={6}\r\n                                md={6}\r\n                                sm={12}\r\n                                xs={12}\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                <Form.Group controlId=\"Lname\">\r\n                                    <Form.Control\r\n                                        //  className=\" mb-2 p-2\"\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Last Name\"\r\n                                        name=\"Lname\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"Email\">\r\n                                    <Form.Control\r\n                                        //  className=\" mb-2 p-2\"\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Email\"\r\n                                        name=\"email\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Address\">\r\n                                    <Form.Control\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Address\"\r\n                                        name=\"Address\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Code\">\r\n                                    <Form.Control\r\n                                        style={{\r\n                                            width: '70%',\r\n                                            marginBottom: '16px',\r\n                                            borderRadius: '15px'\r\n                                        }}\r\n                                        size=\"lg\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Pin Code\"\r\n                                        name=\"Code\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            style={{marginLeft: '50px', borderRadius: '15px'}}\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                        >\r\n                            <Icon>add</Icon>\r\n                            <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                                Proceed to Payments\r\n                            </Span>\r\n                        </Button>\r\n                    </ValidatorForm>\r\n                </SimpleCard>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import '../fake-db'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom-old'\r\n\r\nimport Home from './containers/Home'\r\nimport Login from './containers/Login'\r\nimport Signup from './containers/Signup'\r\nimport Activate from './containers/Activate'\r\nimport ResetPassword from './containers/ResetPassword'\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm'\r\nimport CustomerForm from './views/material-kit/forms/CustomerForm'\r\nimport AppForm from './views/material-kit/forms/AppForm'\r\nimport Pricing from './containers/Pricing/Pricing'\r\nimport Layout from './hocs/Layout'\r\nimport store from './store'\r\nimport { GetStarted1 } from './containers/GetStarted1'\r\nimport GetStarted2 from './containers/GetStarted2'\r\nimport Dashboard from './containers/Dashboard'\r\nimport { GSTForm } from './containers/GSTForm'\r\nimport VendorForn from './views/material-kit/forms/VendorForm'\r\nimport Addstart from './views/material-kit/forms/Addstart'\r\nimport EstimateForm from './views/material-kit/forms/EstimateForm'\r\nimport AppAutoComplete from './views/material-kit/auto-complete/AppAutoComplete'\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path=\"/pricing\" component={GSTForm} />\r\n                        <Route exact path=\"/users\" component={Addstart} />\r\n                        <Route exact path=\"/expenses\" component={AppAutoComplete} />\r\n                        <Route exact path=\"/customers\" component={CustomerForm} />\r\n                        <Route exact path=\"/estimates\" component={EstimateForm} />\r\n                        <Route exact path=\"/invoices\" component={AppForm} />\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route exact path=\"/login\" component={Login} />\r\n                        <Route exact path=\"/signup\" component={Signup} />\r\n                        <Route exact path=\"/prices\" component={Pricing} />\r\n                        <Route exact path=\"/launchpad\" component={GetStarted1} />\r\n                        <Route exact path=\"/vendors\" component={VendorForn} />\r\n                        <Route exact path=\"/onboarding\"\r\n                            component={(props) => (\r\n                                <GetStarted2 fname={' Welcome'} {...props}>\r\n                                    {props.children}\r\n                                </GetStarted2>\r\n                            )}\r\n                        />\r\n                        <Route exact path=\"/reset-password\" component={ResetPassword} />\r\n                        <Route exact path=\"/dashboard/default\" component={Dashboard} />\r\n                        <Route exact path=\"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\r\n                        <Route exact path=\"/activate/:uid/:token\" component={Activate} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport App from './app/App'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'perfect-scrollbar/css/perfect-scrollbar.css'\r\nimport { StyledEngineProvider } from '@mui/styled-engine'\r\nimport { CssBaseline } from '@mui/material'\r\n\r\nReactDOM.render(\r\n    <StyledEngineProvider injectFirst>\r\n        <BrowserRouter>\r\n            <CssBaseline />\r\n            <App />\r\n        </BrowserRouter>\r\n    </StyledEngineProvider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","import { useContext } from 'react'\r\nimport SettingsContext from 'app/contexts/SettingsContext'\r\n\r\nconst useSettings = () => useContext(SettingsContext)\r\n\r\nexport default useSettings\r\n","export default __webpack_public_path__ + \"static/media/logo.24ba265b.png\";","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport LOGO from './logo.png'\r\n\r\nconst Icon = styled.img`\r\n    height: 20vh;\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`\r\n\r\nconst Logo = () => {\r\n    return <Icon src={LOGO} style={{ width: '200px', height: '150px' }} />\r\n}\r\n\r\nexport default Logo\r\n"],"sourceRoot":""}